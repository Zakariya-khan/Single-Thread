{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0","program":"/home/zakaria/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","polling","--edition=2018","/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=5df0f8796519bebc","-C","extra-filename=-5df0f8796519bebc","--out-dir","/home/zakaria/sigle thread/Single-Thread/Single_Thread/target/rls/debug/deps","-L","dependency=/home/zakaria/sigle thread/Single-Thread/Single_Thread/target/rls/debug/deps","--extern","cfg_if=/home/zakaria/sigle thread/Single-Thread/Single_Thread/target/rls/debug/deps/libcfg_if-5da2e6851197c22f.rmeta","--extern","libc=/home/zakaria/sigle thread/Single-Thread/Single_Thread/target/rls/debug/deps/liblibc-4fb238dc5f0eee7c.rmeta","--extern","log=/home/zakaria/sigle thread/Single-Thread/Single_Thread/target/rls/debug/deps/liblog-ceb34cf3afdf7af2.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/zakaria/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/zakaria/sigle thread/Single-Thread/Single_Thread/target/rls/debug/deps/libpolling-5df0f8796519bebc.rmeta"},"prelude":{"crate_id":{"name":"polling","disambiguator":[13785932731189534425,12521052788998694945]},"crate_root":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src","external_crates":[{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7620319826054890005,5717302534568989792]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[4475606148663180750,5419346832002689975]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[18209801913766412741,14708739502762596590]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17534900064032465835,11074003829314630197]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5259792513756561775,1479263106690228407]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[14346116818397650781,2977216825120829807]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3936655635976934790,16389253933182331078]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5174545163365617014,15822577537272331306]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[1537777832242498626,9514621648460519184]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[18358940337312830879,10081988574518201852]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[12121062121650459058,11489301800313262789]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14319052529584542008,1066639489166686923]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9012578297089494616,4116522626272880912]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[8611561841149342373,8229239553347846203]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","num":15,"id":{"name":"cfg_if","disambiguator":[949706588913837792,10397257036886845205]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/epoll.rs","num":16,"id":{"name":"log","disambiguator":[10188478564831943100,12709535847170411958]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","num":17,"id":{"name":"libc","disambiguator":[17972563726282081762,1542093452802945439]}}],"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":0,"byte_end":13653,"line_start":1,"line_end":447,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":0,"byte_end":13653,"line_start":1,"line_end":447,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":36},{"krate":0,"index":69},{"krate":0,"index":13},{"krate":0,"index":76},{"krate":0,"index":80},{"krate":0,"index":14},{"krate":0,"index":19},{"krate":0,"index":23},{"krate":0,"index":34},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":89}],"decl_id":null,"docs":" Portable interface to epoll, kqueue, event ports, and wepoll.","sig":null,"attributes":[{"value":"! Portable interface to epoll, kqueue, event ports, and wepoll.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":0,"byte_end":65,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":66,"byte_end":69,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Supported platforms:","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":70,"byte_end":94,"line_start":3,"line_end":3,"column_start":1,"column_end":25}},{"value":"! - [epoll](https://en.wikipedia.org/wiki/Epoll): Linux, Android","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":95,"byte_end":161,"line_start":4,"line_end":4,"column_start":1,"column_end":67}},{"value":"! - [kqueue](https://en.wikipedia.org/wiki/Kqueue): macOS, iOS, FreeBSD, NetBSD, OpenBSD,","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":162,"byte_end":253,"line_start":5,"line_end":5,"column_start":1,"column_end":92}},{"value":"!   DragonFly BSD","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":254,"byte_end":273,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"! - [event ports](https://illumos.org/man/port_create): illumos, Solaris","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":274,"byte_end":348,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"! - [wepoll](https://github.com/piscisaureus/wepoll): Windows","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":349,"byte_end":412,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":413,"byte_end":416,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! Polling is done in oneshot mode, which means interest in I/O events needs to be reset after","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":417,"byte_end":512,"line_start":10,"line_end":10,"column_start":1,"column_end":96}},{"value":"! an event is delivered if we're interested in the next event of the same kind.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":513,"byte_end":594,"line_start":11,"line_end":11,"column_start":1,"column_end":82}},{"value":"!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":595,"byte_end":598,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Only one thread can be waiting for I/O events at a time.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":599,"byte_end":659,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":660,"byte_end":663,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":664,"byte_end":678,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":679,"byte_end":682,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":683,"byte_end":696,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"! use polling::{Event, Poller};","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":697,"byte_end":730,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"! use std::net::TcpListener;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":731,"byte_end":761,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":762,"byte_end":765,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! // Create a TCP listener.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":766,"byte_end":795,"line_start":21,"line_end":21,"column_start":1,"column_end":30}},{"value":"! let socket = TcpListener::bind(\"127.0.0.1:8000\")?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":796,"byte_end":850,"line_start":22,"line_end":22,"column_start":1,"column_end":55}},{"value":"! let key = 7; // arbitrary key identifying the socket","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":851,"byte_end":907,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":908,"byte_end":911,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! // Create a poller and register interest in readability on the socket.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":912,"byte_end":986,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"! let poller = Poller::new()?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":987,"byte_end":1019,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"! poller.insert(&socket)?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":1020,"byte_end":1048,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"! poller.interest(&socket, Event::readable(key))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":1049,"byte_end":1101,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":1102,"byte_end":1105,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! // The event loop.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":1106,"byte_end":1128,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"! let mut events = Vec::new();","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":1129,"byte_end":1161,"line_start":31,"line_end":31,"column_start":1,"column_end":33}},{"value":"! loop {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":1162,"byte_end":1172,"line_start":32,"line_end":32,"column_start":1,"column_end":11}},{"value":"!     // Wait for at least one I/O event.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":1173,"byte_end":1216,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"!     events.clear();","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":1217,"byte_end":1240,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"!     poller.wait(&mut events, None)?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":1241,"byte_end":1281,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":1282,"byte_end":1285,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"!     for ev in &events {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":1286,"byte_end":1313,"line_start":37,"line_end":37,"column_start":1,"column_end":28}},{"value":"!         if ev.key == key {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":1314,"byte_end":1344,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"!             // Perform a non-blocking accept operation.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":1345,"byte_end":1404,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"!             socket.accept()?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":1405,"byte_end":1438,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"!             // Set interest in the next readability event.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":1439,"byte_end":1501,"line_start":41,"line_end":41,"column_start":1,"column_end":63}},{"value":"!             poller.interest(&socket, Event::readable(key))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":1502,"byte_end":1566,"line_start":42,"line_end":42,"column_start":1,"column_end":65}},{"value":"!         }","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":1567,"byte_end":1580,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"!     }","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":1581,"byte_end":1590,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":1591,"byte_end":1596,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"! # std::io::Result::Ok(())","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":1597,"byte_end":1626,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"! ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":1627,"byte_end":1634,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":1636,"byte_end":1660,"line_start":49,"line_end":49,"column_start":1,"column_end":25}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":1704,"byte_end":1775,"line_start":51,"line_end":51,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":76},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":3133,"byte_end":3138,"line_start":108,"line_end":108,"column_start":12,"column_end":17},"name":"Event","qualname":"::Event","value":"Event { key, readable, writable }","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"decl_id":null,"docs":" Indicates that a file descriptor or socket can read or write without blocking.\n","sig":null,"attributes":[{"value":"/ Indicates that a file descriptor or socket can read or write without blocking.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":3022,"byte_end":3104,"line_start":106,"line_end":106,"column_start":1,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":77},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":3204,"byte_end":3207,"line_start":110,"line_end":110,"column_start":9,"column_end":12},"name":"key","qualname":"::Event::key","value":"usize","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Key identifying the file descriptor or socket.\n","sig":null,"attributes":[{"value":"/ Key identifying the file descriptor or socket.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":3145,"byte_end":3195,"line_start":109,"line_end":109,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":78},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":3277,"byte_end":3285,"line_start":112,"line_end":112,"column_start":9,"column_end":17},"name":"readable","qualname":"::Event::readable","value":"bool","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Can it do a read operation without blocking?\n","sig":null,"attributes":[{"value":"/ Can it do a read operation without blocking?","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":3220,"byte_end":3268,"line_start":111,"line_end":111,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":79},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":3355,"byte_end":3363,"line_start":114,"line_end":114,"column_start":9,"column_end":17},"name":"writable","qualname":"::Event::writable","value":"bool","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Can it do a write operation without blocking?\n","sig":null,"attributes":[{"value":"/ Can it do a write operation without blocking?","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":3297,"byte_end":3346,"line_start":113,"line_end":113,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":3530,"byte_end":3533,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"all","qualname":"<Event>::all","value":"fn (key: usize) -> Event","parent":null,"children":[],"decl_id":null,"docs":" All kinds of events (readable and writable).","sig":null,"attributes":[{"value":"/ All kinds of events (readable and writable).","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":3391,"byte_end":3439,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":3444,"byte_end":3447,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Equivalent to: `Event { key, readable: true, writable: true }`","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":3452,"byte_end":3518,"line_start":120,"line_end":120,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":3787,"byte_end":3795,"line_start":132,"line_end":132,"column_start":12,"column_end":20},"name":"readable","qualname":"<Event>::readable","value":"fn (key: usize) -> Event","parent":null,"children":[],"decl_id":null,"docs":" Only the readable event.","sig":null,"attributes":[{"value":"/ Only the readable event.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":3667,"byte_end":3695,"line_start":129,"line_end":129,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":3700,"byte_end":3703,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Equivalent to: `Event { key, readable: true, writable: false }`","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":3708,"byte_end":3775,"line_start":131,"line_end":131,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":4050,"byte_end":4058,"line_start":143,"line_end":143,"column_start":12,"column_end":20},"name":"writable","qualname":"<Event>::writable","value":"fn (key: usize) -> Event","parent":null,"children":[],"decl_id":null,"docs":" Only the writable event.","sig":null,"attributes":[{"value":"/ Only the writable event.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":3930,"byte_end":3958,"line_start":140,"line_end":140,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":3963,"byte_end":3966,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Equivalent to: `Event { key, readable: false, writable: true }`","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":3971,"byte_end":4038,"line_start":142,"line_end":142,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":4300,"byte_end":4304,"line_start":154,"line_end":154,"column_start":12,"column_end":16},"name":"none","qualname":"<Event>::none","value":"fn (key: usize) -> Event","parent":null,"children":[],"decl_id":null,"docs":" No events.","sig":null,"attributes":[{"value":"/ No events.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":4193,"byte_end":4207,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":4212,"byte_end":4215,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Equivalent to: `Event { key, readable: false, writable: false }`","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":4220,"byte_end":4288,"line_start":153,"line_end":153,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":19},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":4475,"byte_end":4481,"line_start":164,"line_end":164,"column_start":12,"column_end":18},"name":"Poller","qualname":"::Poller","value":"Poller {  }","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22}],"decl_id":null,"docs":" Waits for I/O events.\n","sig":null,"attributes":[{"value":"/ Waits for I/O events.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":4438,"byte_end":4463,"line_start":163,"line_end":163,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":4792,"byte_end":4795,"line_start":181,"line_end":181,"column_start":12,"column_end":15},"name":"new","qualname":"<Poller>::new","value":"fn () -> io::Result<Poller>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new poller.","sig":null,"attributes":[{"value":"/ Creates a new poller.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":4588,"byte_end":4613,"line_start":171,"line_end":171,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":4618,"byte_end":4621,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":4626,"byte_end":4640,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":4645,"byte_end":4648,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":4653,"byte_end":4660,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ use polling::Poller;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":4665,"byte_end":4689,"line_start":176,"line_end":176,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":4694,"byte_end":4697,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ let poller = Poller::new()?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":4702,"byte_end":4734,"line_start":178,"line_end":178,"column_start":5,"column_end":37}},{"value":"/ # std::io::Result::Ok(())","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":4739,"byte_end":4768,"line_start":179,"line_end":179,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":4773,"byte_end":4780,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":5684,"byte_end":5690,"line_start":208,"line_end":208,"column_start":12,"column_end":18},"name":"insert","qualname":"<Poller>::insert","value":"fn (&self, source: impl Source) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a file descriptor or socket into the poller and puts it in non-blocking mode.","sig":null,"attributes":[{"value":"/ Inserts a file descriptor or socket into the poller and puts it in non-blocking mode.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":5003,"byte_end":5092,"line_start":189,"line_end":189,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":5097,"byte_end":5100,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Before setting interest in readability or writability, the file descriptor or socket must","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":5105,"byte_end":5198,"line_start":191,"line_end":191,"column_start":5,"column_end":98}},{"value":"/ be inserted into the poller. This method also puts it in non-blocking mode.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":5203,"byte_end":5282,"line_start":192,"line_end":192,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":5287,"byte_end":5290,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Don't forget to [remove][`Poller::remove()`] it when it is no longer used!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":5295,"byte_end":5373,"line_start":194,"line_end":194,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":5378,"byte_end":5381,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":5386,"byte_end":5400,"line_start":196,"line_end":196,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":5405,"byte_end":5408,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":5413,"byte_end":5420,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ use polling::Poller;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":5425,"byte_end":5449,"line_start":199,"line_end":199,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":5454,"byte_end":5484,"line_start":200,"line_end":200,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":5489,"byte_end":5492,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ let poller = Poller::new()?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":5497,"byte_end":5529,"line_start":202,"line_end":202,"column_start":5,"column_end":37}},{"value":"/ let socket = TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":5534,"byte_end":5585,"line_start":203,"line_end":203,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":5590,"byte_end":5593,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ poller.insert(&socket)?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":5598,"byte_end":5626,"line_start":205,"line_end":205,"column_start":5,"column_end":33}},{"value":"/ # std::io::Result::Ok(())","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":5631,"byte_end":5660,"line_start":206,"line_end":206,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":5665,"byte_end":5672,"line_start":207,"line_end":207,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":8419,"byte_end":8427,"line_start":279,"line_end":279,"column_start":12,"column_end":20},"name":"interest","qualname":"<Poller>::interest","value":"fn (&self, source: impl Source, event: Event) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Enables or disables interest in a file descriptor or socket.","sig":null,"attributes":[{"value":"/ Enables or disables interest in a file descriptor or socket.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":5791,"byte_end":5855,"line_start":212,"line_end":212,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":5860,"byte_end":5863,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ A file descriptor or socket is considered readable or writable when a read or write","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":5868,"byte_end":5955,"line_start":214,"line_end":214,"column_start":5,"column_end":92}},{"value":"/ operation on it would not block. This doesn't mean the read or write operation will","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":5960,"byte_end":6047,"line_start":215,"line_end":215,"column_start":5,"column_end":92}},{"value":"/ succeed, it only means the operation will return immediately.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":6052,"byte_end":6117,"line_start":216,"line_end":216,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":6122,"byte_end":6125,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ If interest is set in both readability and writability, the two kinds of events might be","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":6130,"byte_end":6222,"line_start":218,"line_end":218,"column_start":5,"column_end":97}},{"value":"/ delivered either separately or together.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":6227,"byte_end":6271,"line_start":219,"line_end":219,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":6276,"byte_end":6279,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ For example, interest in `Event { key: 7, readable: true, writable: true }` might result in","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":6284,"byte_end":6379,"line_start":221,"line_end":221,"column_start":5,"column_end":100}},{"value":"/ a single [`Event`] of the same form, or in two separate [`Event`]s:","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":6384,"byte_end":6455,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ - `Event { key: 7, readable: true, writable: false }`","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":6460,"byte_end":6517,"line_start":223,"line_end":223,"column_start":5,"column_end":62}},{"value":"/ - `Event { key: 7, readable: false, writable: true }`","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":6522,"byte_end":6579,"line_start":224,"line_end":224,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":6584,"byte_end":6587,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":6592,"byte_end":6604,"line_start":226,"line_end":226,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":6609,"byte_end":6612,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ This method returns an error in the following situations:","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":6617,"byte_end":6678,"line_start":228,"line_end":228,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":6683,"byte_end":6686,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ * If `source` was not [inserted][`Poller::interest()`] into the poller.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":6691,"byte_end":6766,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ * If `key` equals `usize::MAX` because that key is reserved for internal use.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":6771,"byte_end":6852,"line_start":231,"line_end":231,"column_start":5,"column_end":86}},{"value":"/ * If an error is returned by the syscall.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":6857,"byte_end":6902,"line_start":232,"line_end":232,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":6907,"byte_end":6910,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":6915,"byte_end":6929,"line_start":234,"line_end":234,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":6934,"byte_end":6937,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ To enable interest in all events:","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":6942,"byte_end":6979,"line_start":236,"line_end":236,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":6984,"byte_end":6987,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":6992,"byte_end":7005,"line_start":238,"line_end":238,"column_start":5,"column_end":18}},{"value":"/ # use polling::{Event, Poller};","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7010,"byte_end":7045,"line_start":239,"line_end":239,"column_start":5,"column_end":40}},{"value":"/ # let poller = Poller::new()?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7050,"byte_end":7084,"line_start":240,"line_end":240,"column_start":5,"column_end":39}},{"value":"/ # let key = 7;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7089,"byte_end":7107,"line_start":241,"line_end":241,"column_start":5,"column_end":23}},{"value":"/ # let source = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7112,"byte_end":7175,"line_start":242,"line_end":242,"column_start":5,"column_end":68}},{"value":"/ poller.interest(&source, Event::all(key))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7180,"byte_end":7227,"line_start":243,"line_end":243,"column_start":5,"column_end":52}},{"value":"/ # std::io::Result::Ok(())","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7232,"byte_end":7261,"line_start":244,"line_end":244,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7266,"byte_end":7273,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7278,"byte_end":7281,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ To enable interest in readable events and disable interest in writable events:","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7286,"byte_end":7368,"line_start":247,"line_end":247,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7373,"byte_end":7376,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7381,"byte_end":7394,"line_start":249,"line_end":249,"column_start":5,"column_end":18}},{"value":"/ # use polling::{Event, Poller};","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7399,"byte_end":7434,"line_start":250,"line_end":250,"column_start":5,"column_end":40}},{"value":"/ # let poller = Poller::new()?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7439,"byte_end":7473,"line_start":251,"line_end":251,"column_start":5,"column_end":39}},{"value":"/ # let key = 7;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7478,"byte_end":7496,"line_start":252,"line_end":252,"column_start":5,"column_end":23}},{"value":"/ # let source = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7501,"byte_end":7564,"line_start":253,"line_end":253,"column_start":5,"column_end":68}},{"value":"/ poller.interest(&source, Event::readable(key))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7569,"byte_end":7621,"line_start":254,"line_end":254,"column_start":5,"column_end":57}},{"value":"/ # std::io::Result::Ok(())","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7626,"byte_end":7655,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7660,"byte_end":7667,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7672,"byte_end":7675,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ To disable interest in readable events and enable interest in writable events:","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7680,"byte_end":7762,"line_start":258,"line_end":258,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7767,"byte_end":7770,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7775,"byte_end":7788,"line_start":260,"line_end":260,"column_start":5,"column_end":18}},{"value":"/ # use polling::{Event, Poller};","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7793,"byte_end":7828,"line_start":261,"line_end":261,"column_start":5,"column_end":40}},{"value":"/ # let poller = Poller::new()?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7833,"byte_end":7867,"line_start":262,"line_end":262,"column_start":5,"column_end":39}},{"value":"/ # let key = 7;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7872,"byte_end":7890,"line_start":263,"line_end":263,"column_start":5,"column_end":23}},{"value":"/ # let source = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7895,"byte_end":7958,"line_start":264,"line_end":264,"column_start":5,"column_end":68}},{"value":"/ poller.interest(&source, Event::writable(key))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":7963,"byte_end":8015,"line_start":265,"line_end":265,"column_start":5,"column_end":57}},{"value":"/ # std::io::Result::Ok(())","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":8020,"byte_end":8049,"line_start":266,"line_end":266,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":8054,"byte_end":8061,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":8066,"byte_end":8069,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ To disable interest in all events:","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":8074,"byte_end":8112,"line_start":269,"line_end":269,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":8117,"byte_end":8120,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":8125,"byte_end":8138,"line_start":271,"line_end":271,"column_start":5,"column_end":18}},{"value":"/ # use polling::{Event, Poller};","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":8143,"byte_end":8178,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/ # let poller = Poller::new()?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":8183,"byte_end":8217,"line_start":273,"line_end":273,"column_start":5,"column_end":39}},{"value":"/ # let key = 7;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":8222,"byte_end":8240,"line_start":274,"line_end":274,"column_start":5,"column_end":23}},{"value":"/ # let source = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":8245,"byte_end":8308,"line_start":275,"line_end":275,"column_start":5,"column_end":68}},{"value":"/ poller.interest(&source, Event::none(key))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":8313,"byte_end":8361,"line_start":276,"line_end":276,"column_start":5,"column_end":53}},{"value":"/ # std::io::Result::Ok(())","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":8366,"byte_end":8395,"line_start":277,"line_end":277,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":8400,"byte_end":8407,"line_start":278,"line_end":278,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":9352,"byte_end":9358,"line_start":308,"line_end":308,"column_start":12,"column_end":18},"name":"remove","qualname":"<Poller>::remove","value":"fn (&self, source: impl Source) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes a file descriptor or socket from the poller.","sig":null,"attributes":[{"value":"/ Removes a file descriptor or socket from the poller.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":8772,"byte_end":8828,"line_start":290,"line_end":290,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":8833,"byte_end":8836,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Unlike [`insert()`][`Poller::insert()`], this method only removes the file descriptor or","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":8841,"byte_end":8933,"line_start":292,"line_end":292,"column_start":5,"column_end":97}},{"value":"/ socket from the poller without putting it back into blocking mode.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":8938,"byte_end":9008,"line_start":293,"line_end":293,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":9013,"byte_end":9016,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":9021,"byte_end":9035,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":9040,"byte_end":9043,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":9048,"byte_end":9055,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ use polling::Poller;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":9060,"byte_end":9084,"line_start":298,"line_end":298,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":9089,"byte_end":9119,"line_start":299,"line_end":299,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":9124,"byte_end":9127,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ let poller = Poller::new()?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":9132,"byte_end":9164,"line_start":301,"line_end":301,"column_start":5,"column_end":37}},{"value":"/ let socket = TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":9169,"byte_end":9220,"line_start":302,"line_end":302,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":9225,"byte_end":9228,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ poller.insert(&socket)?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":9233,"byte_end":9261,"line_start":304,"line_end":304,"column_start":5,"column_end":33}},{"value":"/ poller.remove(&socket)?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":9266,"byte_end":9294,"line_start":305,"line_end":305,"column_start":5,"column_end":33}},{"value":"/ # std::io::Result::Ok(())","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":9299,"byte_end":9328,"line_start":306,"line_end":306,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":9333,"byte_end":9340,"line_start":307,"line_end":307,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":10783,"byte_end":10787,"line_start":345,"line_end":345,"column_start":12,"column_end":16},"name":"wait","qualname":"<Poller>::wait","value":"fn (&self, events: &mut Vec<Event>, timeout: Option<Duration>) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Waits for at least one I/O event and returns the number of new events.","sig":null,"attributes":[{"value":"/ Waits for at least one I/O event and returns the number of new events.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":9459,"byte_end":9533,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":9538,"byte_end":9541,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ New events will be appended to `events`. If necessary, make sure to clear the [`Vec`]","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":9546,"byte_end":9635,"line_start":314,"line_end":314,"column_start":5,"column_end":94}},{"value":"/ before calling [`wait()`][`Poller::wait()`]!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":9640,"byte_end":9688,"line_start":315,"line_end":315,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":9693,"byte_end":9696,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ This method will return with no new events if a notification is delivered by the","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":9701,"byte_end":9785,"line_start":317,"line_end":317,"column_start":5,"column_end":89}},{"value":"/ [`notify()`] method, or the timeout is reached. Sometimes it may even return with no events","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":9790,"byte_end":9885,"line_start":318,"line_end":318,"column_start":5,"column_end":100}},{"value":"/ spuriously.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":9890,"byte_end":9905,"line_start":319,"line_end":319,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":9910,"byte_end":9913,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ Only one thread can wait on I/O. If another thread is already in [`wait()`], concurrent","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":9918,"byte_end":10009,"line_start":321,"line_end":321,"column_start":5,"column_end":96}},{"value":"/ calls to this method will return immediately with no new events.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":10014,"byte_end":10082,"line_start":322,"line_end":322,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":10087,"byte_end":10090,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ If the operating system is ready to deliver a large number of events at once, this method","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":10095,"byte_end":10188,"line_start":324,"line_end":324,"column_start":5,"column_end":98}},{"value":"/ may decide to deliver them in smaller batches.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":10193,"byte_end":10243,"line_start":325,"line_end":325,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":10248,"byte_end":10251,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ [`notify()`]: `Poller::notify()`","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":10256,"byte_end":10292,"line_start":327,"line_end":327,"column_start":5,"column_end":41}},{"value":"/ [`wait()`]: `Poller::wait()`","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":10297,"byte_end":10329,"line_start":328,"line_end":328,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":10334,"byte_end":10337,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":10342,"byte_end":10356,"line_start":330,"line_end":330,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":10361,"byte_end":10364,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":10369,"byte_end":10376,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/ use polling::Poller;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":10381,"byte_end":10405,"line_start":333,"line_end":333,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":10410,"byte_end":10440,"line_start":334,"line_end":334,"column_start":5,"column_end":35}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":10445,"byte_end":10473,"line_start":335,"line_end":335,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":10478,"byte_end":10481,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ let poller = Poller::new()?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":10486,"byte_end":10518,"line_start":337,"line_end":337,"column_start":5,"column_end":37}},{"value":"/ let socket = TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":10523,"byte_end":10574,"line_start":338,"line_end":338,"column_start":5,"column_end":56}},{"value":"/ poller.insert(&socket)?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":10579,"byte_end":10607,"line_start":339,"line_end":339,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":10612,"byte_end":10615,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ let mut events = Vec::new();","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":10620,"byte_end":10652,"line_start":341,"line_end":341,"column_start":5,"column_end":37}},{"value":"/ let n = poller.wait(&mut events, Some(Duration::from_secs(1)))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":10657,"byte_end":10725,"line_start":342,"line_end":342,"column_start":5,"column_end":73}},{"value":"/ # std::io::Result::Ok(())","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":10730,"byte_end":10759,"line_start":343,"line_end":343,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":10764,"byte_end":10771,"line_start":344,"line_end":344,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":12135,"byte_end":12141,"line_start":387,"line_end":387,"column_start":12,"column_end":18},"name":"notify","qualname":"<Poller>::notify","value":"fn (&self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wakes up the current or the following invocation of [`wait()`].","sig":null,"attributes":[{"value":"/ Wakes up the current or the following invocation of [`wait()`].","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":11498,"byte_end":11565,"line_start":365,"line_end":365,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":11570,"byte_end":11573,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ If no thread is calling [`wait()`] right now, this method will cause the following call","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":11578,"byte_end":11669,"line_start":367,"line_end":367,"column_start":5,"column_end":96}},{"value":"/ to wake up immediately.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":11674,"byte_end":11701,"line_start":368,"line_end":368,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":11706,"byte_end":11709,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ [`wait()`]: `Poller::wait()`","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":11714,"byte_end":11746,"line_start":370,"line_end":370,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":11751,"byte_end":11754,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":11759,"byte_end":11773,"line_start":372,"line_end":372,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":11778,"byte_end":11781,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":11786,"byte_end":11793,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"/ use polling::Poller;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":11798,"byte_end":11822,"line_start":375,"line_end":375,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":11827,"byte_end":11830,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ let poller = Poller::new()?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":11835,"byte_end":11867,"line_start":377,"line_end":377,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":11872,"byte_end":11875,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ // Notify the poller.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":11880,"byte_end":11905,"line_start":379,"line_end":379,"column_start":5,"column_end":30}},{"value":"/ poller.notify()?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":11910,"byte_end":11931,"line_start":380,"line_end":380,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":11936,"byte_end":11939,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ let mut events = Vec::new();","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":11944,"byte_end":11976,"line_start":382,"line_end":382,"column_start":5,"column_end":37}},{"value":"/ poller.wait(&mut events, None)?; // wakes up immediately","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":11981,"byte_end":12041,"line_start":383,"line_end":383,"column_start":5,"column_end":65}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":12046,"byte_end":12077,"line_start":384,"line_end":384,"column_start":5,"column_end":36}},{"value":"/ # std::io::Result::Ok(())","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":12082,"byte_end":12111,"line_start":385,"line_end":385,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":12116,"byte_end":12123,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":85},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":12692,"byte_end":12698,"line_start":410,"line_end":410,"column_start":19,"column_end":25},"name":"Source","qualname":"::Source","value":"Source","parent":null,"children":[{"krate":0,"index":86}],"decl_id":null,"docs":" A [`RawFd`] or a reference to a type implementing [`AsRawFd`].\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":12775,"byte_end":12778,"line_start":412,"line_end":412,"column_start":16,"column_end":19},"name":"raw","qualname":"::Source::raw","value":"fn (&self) -> RawFd","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Returns the [`RawFd`] for this I/O object.\n","sig":null,"attributes":[{"value":"/ Returns the [`RawFd`] for this I/O object.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":12713,"byte_end":12759,"line_start":411,"line_end":411,"column_start":13,"column_end":59}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/epoll.rs","byte_start":7602149,"byte_end":7602155,"line_start":22,"line_end":22,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/epoll.rs","byte_start":7608933,"byte_end":7608939,"line_start":242,"line_end":242,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/epoll.rs","byte_start":7610012,"byte_end":7610018,"line_start":283,"line_end":283,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/epoll.rs","byte_start":7610028,"byte_end":7610034,"line_start":285,"line_end":285,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":3379,"byte_end":3384,"line_start":117,"line_end":117,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":4575,"byte_end":4581,"line_start":170,"line_end":170,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":12409,"byte_end":12415,"line_start":399,"line_end":399,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":12831,"byte_end":12836,"line_start":415,"line_end":415,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/epoll.rs","byte_start":7602149,"byte_end":7602155,"line_start":22,"line_end":22,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":70},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/epoll.rs","byte_start":7608933,"byte_end":7608939,"line_start":242,"line_end":242,"column_start":15,"column_end":21},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":70},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/epoll.rs","byte_start":7610012,"byte_end":7610018,"line_start":283,"line_end":283,"column_start":22,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/epoll.rs","byte_start":7610028,"byte_end":7610034,"line_start":285,"line_end":285,"column_start":6,"column_end":12},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":60},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":3379,"byte_end":3384,"line_start":117,"line_end":117,"column_start":6,"column_end":11},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":76},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":4575,"byte_end":4581,"line_start":170,"line_end":170,"column_start":6,"column_end":12},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":19},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":12409,"byte_end":12415,"line_start":399,"line_end":399,"column_start":21,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":19},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/polling-1.1.0/src/lib.rs","byte_start":12831,"byte_end":12836,"line_start":415,"line_end":415,"column_start":25,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":1,"index":8192},"to":{"krate":0,"index":85}}]}