{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2","program":"/home/zakaria/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","async_io","--edition=2018","/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=c2673c481aa9f7c6","-C","extra-filename=-c2673c481aa9f7c6","--out-dir","/home/zakaria/sigle thread/Single-Thread/Single_Thread/target/rls/debug/deps","-L","dependency=/home/zakaria/sigle thread/Single-Thread/Single_Thread/target/rls/debug/deps","--extern","concurrent_queue=/home/zakaria/sigle thread/Single-Thread/Single_Thread/target/rls/debug/deps/libconcurrent_queue-ec618b852fa81f71.rmeta","--extern","fastrand=/home/zakaria/sigle thread/Single-Thread/Single_Thread/target/rls/debug/deps/libfastrand-de94a986e7c2062c.rmeta","--extern","futures_lite=/home/zakaria/sigle thread/Single-Thread/Single_Thread/target/rls/debug/deps/libfutures_lite-d63cb466148def3b.rmeta","--extern","log=/home/zakaria/sigle thread/Single-Thread/Single_Thread/target/rls/debug/deps/liblog-ceb34cf3afdf7af2.rmeta","--extern","nb_connect=/home/zakaria/sigle thread/Single-Thread/Single_Thread/target/rls/debug/deps/libnb_connect-b481527023349120.rmeta","--extern","once_cell=/home/zakaria/sigle thread/Single-Thread/Single_Thread/target/rls/debug/deps/libonce_cell-e12dfbeea283271e.rmeta","--extern","parking=/home/zakaria/sigle thread/Single-Thread/Single_Thread/target/rls/debug/deps/libparking-9a928067071d3020.rmeta","--extern","polling=/home/zakaria/sigle thread/Single-Thread/Single_Thread/target/rls/debug/deps/libpolling-5df0f8796519bebc.rmeta","--extern","vec_arena=/home/zakaria/sigle thread/Single-Thread/Single_Thread/target/rls/debug/deps/libvec_arena-cf0e3a2ce05efcc8.rmeta","--extern","waker_fn=/home/zakaria/sigle thread/Single-Thread/Single_Thread/target/rls/debug/deps/libwaker_fn-7ad1226de1717347.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/zakaria/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/zakaria/sigle thread/Single-Thread/Single_Thread/target/rls/debug/deps/libasync_io-c2673c481aa9f7c6.rmeta"},"prelude":{"crate_id":{"name":"async_io","disambiguator":[9745452904300262224,10441011526819786206]},"crate_root":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src","external_crates":[{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7620319826054890005,5717302534568989792]}},{"file_name":"<::futures_lite::pin macros>","num":2,"id":{"name":"core","disambiguator":[4475606148663180750,5419346832002689975]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[18209801913766412741,14708739502762596590]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17534900064032465835,11074003829314630197]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5259792513756561775,1479263106690228407]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[14346116818397650781,2977216825120829807]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3936655635976934790,16389253933182331078]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5174545163365617014,15822577537272331306]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[1537777832242498626,9514621648460519184]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[18358940337312830879,10081988574518201852]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[12121062121650459058,11489301800313262789]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14319052529584542008,1066639489166686923]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9012578297089494616,4116522626272880912]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[8611561841149342373,8229239553347846203]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","num":15,"id":{"name":"futures_lite","disambiguator":[10258702571312705604,11045065042319003055]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","num":16,"id":{"name":"pin_project_lite","disambiguator":[8505744307337954664,14441721190822549419]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/reactor.rs","num":17,"id":{"name":"parking","disambiguator":[3623142611830131902,14435354341016496270]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/reactor.rs","num":18,"id":{"name":"waker_fn","disambiguator":[3345399703147219360,15617530861014593678]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","num":19,"id":{"name":"futures_core","disambiguator":[13414930073433816787,17803550977933560606]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","num":20,"id":{"name":"futures_io","disambiguator":[11572168212432952411,2357896798894788376]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","num":21,"id":{"name":"fastrand","disambiguator":[5137359410649677960,17254293200088526391]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","num":22,"id":{"name":"memchr","disambiguator":[5059365408667434235,12492953106987922231]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/reactor.rs","num":23,"id":{"name":"concurrent_queue","disambiguator":[11050004688349847041,16771195381491350401]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/reactor.rs","num":24,"id":{"name":"cache_padded","disambiguator":[10596610814305440564,7811444270710725046]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/reactor.rs","num":25,"id":{"name":"once_cell","disambiguator":[5584408347597074548,14819751733642195600]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/reactor.rs","num":26,"id":{"name":"polling","disambiguator":[13785932731189534425,12521052788998694945]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/reactor.rs","num":27,"id":{"name":"cfg_if","disambiguator":[949706588913837792,10397257036886845205]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/reactor.rs","num":28,"id":{"name":"log","disambiguator":[10188478564831943100,12709535847170411958]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/reactor.rs","num":29,"id":{"name":"libc","disambiguator":[17972563726282081762,1542093452802945439]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/reactor.rs","num":30,"id":{"name":"vec_arena","disambiguator":[10013316876328398979,9983695502875004097]}},{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","num":31,"id":{"name":"nb_connect","disambiguator":[6383119354581594486,3640452950078290037]}}],"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":0,"byte_end":47739,"line_start":1,"line_end":1474,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":0,"byte_end":47739,"line_start":1,"line_end":1474,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":161},{"krate":0,"index":385},{"krate":0,"index":388},{"krate":0,"index":164},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":390},{"krate":0,"index":394},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":222},{"krate":0,"index":229},{"krate":0,"index":238},{"krate":0,"index":248},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":303},{"krate":0,"index":306},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":327},{"krate":0,"index":330},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":363},{"krate":0,"index":366}],"decl_id":null,"docs":" Async I/O and timers.","sig":null,"attributes":[{"value":"! Async I/O and timers.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26,"byte_end":29,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This crate provides two tools:","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30,"byte_end":64,"line_start":3,"line_end":3,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":65,"byte_end":68,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! * [`Async`], an adapter for standard networking types (and [many other] types) to use in","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":69,"byte_end":161,"line_start":5,"line_end":5,"column_start":1,"column_end":93}},{"value":"!   async programs.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":162,"byte_end":183,"line_start":6,"line_end":6,"column_start":1,"column_end":22}},{"value":"! * [`Timer`], a future that expires at a point in time.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":184,"byte_end":242,"line_start":7,"line_end":7,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":243,"byte_end":246,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! For concrete async networking types built on top of this crate, see [`async-net`].","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":247,"byte_end":333,"line_start":9,"line_end":9,"column_start":1,"column_end":87}},{"value":"!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":334,"byte_end":337,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! [many other]: https://github.com/stjepang/async-io/tree/master/examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":338,"byte_end":413,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"! [`async-net`]: https://docs.rs/async-net","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":414,"byte_end":458,"line_start":12,"line_end":12,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":459,"byte_end":462,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! # Implementation","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":463,"byte_end":483,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":484,"byte_end":487,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! The first time [`Async`] or [`Timer`] is used, a thread named \"async-io\" will be spawned.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":488,"byte_end":581,"line_start":16,"line_end":16,"column_start":1,"column_end":94}},{"value":"! The purpose of this thread is to wait for I/O events reported by the operating system, and then","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":582,"byte_end":681,"line_start":17,"line_end":17,"column_start":1,"column_end":100}},{"value":"! wake appropriate futures blocked on I/O or timers when they can be resumed.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":682,"byte_end":761,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":762,"byte_end":765,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! To wait for the next I/O event, the \"async-io\" thread uses [epoll] on Linux/Android/illumos,","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":766,"byte_end":862,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"! [kqueue] on macOS/iOS/BSD, [event ports] on illumos/Solaris, and [wepoll] on Windows. That","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":863,"byte_end":957,"line_start":21,"line_end":21,"column_start":1,"column_end":95}},{"value":"! functionality is provided by the [`polling`] crate.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":958,"byte_end":1013,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1014,"byte_end":1017,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! However, note that you can also process I/O events and wake futures on any thread using the","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1018,"byte_end":1113,"line_start":24,"line_end":24,"column_start":1,"column_end":96}},{"value":"! [`block_on()`] function. The \"async-io\" thread is therefore just a fallback mechanism","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1114,"byte_end":1203,"line_start":25,"line_end":25,"column_start":1,"column_end":90}},{"value":"! processing I/O events in case no other threads are.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1204,"byte_end":1259,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1260,"byte_end":1263,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! [epoll]: https://en.wikipedia.org/wiki/Epoll","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1264,"byte_end":1312,"line_start":28,"line_end":28,"column_start":1,"column_end":49}},{"value":"! [kqueue]: https://en.wikipedia.org/wiki/Kqueue","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1313,"byte_end":1363,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"! [event ports]: https://illumos.org/man/port_create","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1364,"byte_end":1418,"line_start":30,"line_end":30,"column_start":1,"column_end":55}},{"value":"! [wepoll]: https://github.com/piscisaureus/wepoll","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1419,"byte_end":1471,"line_start":31,"line_end":31,"column_start":1,"column_end":53}},{"value":"! [`polling`]: https://docs.rs/polling","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1472,"byte_end":1512,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1513,"byte_end":1516,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1517,"byte_end":1531,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1532,"byte_end":1535,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! Connect to `example.com:80`, or time out after 10 seconds.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1536,"byte_end":1598,"line_start":36,"line_end":36,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1599,"byte_end":1602,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1603,"byte_end":1610,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"! use async_io::{Async, Timer};","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1611,"byte_end":1644,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"! use futures_lite::{future::FutureExt, io};","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1645,"byte_end":1691,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1692,"byte_end":1695,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1696,"byte_end":1741,"line_start":42,"line_end":42,"column_start":1,"column_end":46}},{"value":"! use std::time::Duration;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1742,"byte_end":1770,"line_start":43,"line_end":43,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1771,"byte_end":1774,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1775,"byte_end":1819,"line_start":45,"line_end":45,"column_start":1,"column_end":45}},{"value":"! let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1820,"byte_end":1887,"line_start":46,"line_end":46,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1888,"byte_end":1891,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! let stream = Async::<TcpStream>::connect(addr).or(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1892,"byte_end":1953,"line_start":48,"line_end":48,"column_start":1,"column_end":62}},{"value":"!     Timer::after(Duration::from_secs(10)).await;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":1954,"byte_end":2006,"line_start":49,"line_end":49,"column_start":1,"column_end":53}},{"value":"!     Err(io::ErrorKind::TimedOut.into())","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":2007,"byte_end":2050,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"! })","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":2051,"byte_end":2057,"line_start":51,"line_end":51,"column_start":1,"column_end":7}},{"value":"! .await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":2058,"byte_end":2070,"line_start":52,"line_end":52,"column_start":1,"column_end":13}},{"value":"! # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":2071,"byte_end":2104,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"! ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":2105,"byte_end":2112,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":2114,"byte_end":2185,"line_start":56,"line_end":56,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":161},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3350,"byte_end":3358,"line_start":100,"line_end":100,"column_start":8,"column_end":16},"name":"block_on","qualname":"::block_on","value":"fn <T> (future: impl Future<Output = T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread on a future, processing I/O events when idle.","sig":null,"attributes":[{"value":"/ Blocks the current thread on a future, processing I/O events when idle.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":2953,"byte_end":3028,"line_start":86,"line_end":86,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3029,"byte_end":3032,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3033,"byte_end":3047,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3048,"byte_end":3051,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3052,"byte_end":3059,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3060,"byte_end":3084,"line_start":91,"line_end":91,"column_start":1,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3085,"byte_end":3113,"line_start":92,"line_end":92,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3114,"byte_end":3117,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ async_io::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3118,"byte_end":3148,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/     // This timer will likely be processed by the current","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3149,"byte_end":3210,"line_start":95,"line_end":95,"column_start":1,"column_end":62}},{"value":"/     // thread rather than the fallback \"async-io\" thread.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3211,"byte_end":3272,"line_start":96,"line_end":96,"column_start":1,"column_end":62}},{"value":"/     Timer::after(Duration::from_millis(1)).await;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3273,"byte_end":3326,"line_start":97,"line_end":97,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3327,"byte_end":3334,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3335,"byte_end":3342,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":385},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":4251,"byte_end":4256,"line_start":138,"line_end":138,"column_start":12,"column_end":17},"name":"Timer","qualname":"::Timer","value":"Timer {  }","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387}],"decl_id":null,"docs":" A future that expires at a point in time.","sig":null,"attributes":[{"value":"/ A future that expires at a point in time.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3441,"byte_end":3486,"line_start":104,"line_end":104,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3487,"byte_end":3490,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ Timers are futures that output the [`Instant`] at which they fired.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3491,"byte_end":3562,"line_start":106,"line_end":106,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3563,"byte_end":3566,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3567,"byte_end":3581,"line_start":108,"line_end":108,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3582,"byte_end":3585,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ Sleep for 1 second:","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3586,"byte_end":3609,"line_start":110,"line_end":110,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3610,"byte_end":3613,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3614,"byte_end":3621,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3622,"byte_end":3646,"line_start":113,"line_end":113,"column_start":1,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3647,"byte_end":3675,"line_start":114,"line_end":114,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3676,"byte_end":3679,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3680,"byte_end":3724,"line_start":116,"line_end":116,"column_start":1,"column_end":45}},{"value":"/ Timer::after(Duration::from_secs(1)).await;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3725,"byte_end":3772,"line_start":117,"line_end":117,"column_start":1,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3773,"byte_end":3782,"line_start":118,"line_end":118,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3783,"byte_end":3790,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3791,"byte_end":3794,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ Timeout after 1 second:","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3795,"byte_end":3822,"line_start":121,"line_end":121,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3823,"byte_end":3826,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3827,"byte_end":3834,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3835,"byte_end":3859,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/ use futures_lite::FutureExt;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3860,"byte_end":3892,"line_start":125,"line_end":125,"column_start":1,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3893,"byte_end":3921,"line_start":126,"line_end":126,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3922,"byte_end":3925,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3926,"byte_end":3970,"line_start":128,"line_end":128,"column_start":1,"column_end":45}},{"value":"/ let addrs = async_net::resolve(\"google.com:80\")","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":3971,"byte_end":4022,"line_start":129,"line_end":129,"column_start":1,"column_end":52}},{"value":"/     .or(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":4023,"byte_end":4042,"line_start":130,"line_end":130,"column_start":1,"column_end":20}},{"value":"/         Timer::after(Duration::from_secs(10)).await;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":4043,"byte_end":4099,"line_start":131,"line_end":131,"column_start":1,"column_end":57}},{"value":"/         Err(std::io::ErrorKind::TimedOut.into())","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":4100,"byte_end":4152,"line_start":132,"line_end":132,"column_start":1,"column_end":53}},{"value":"/     })","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":4153,"byte_end":4163,"line_start":133,"line_end":133,"column_start":1,"column_end":11}},{"value":"/     .await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":4164,"byte_end":4180,"line_start":134,"line_end":134,"column_start":1,"column_end":17}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":4181,"byte_end":4214,"line_start":135,"line_end":135,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":4215,"byte_end":4222,"line_start":136,"line_end":136,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":4844,"byte_end":4849,"line_start":161,"line_end":161,"column_start":12,"column_end":17},"name":"after","qualname":"<Timer>::after","value":"fn (duration: Duration) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that expires after the given duration of time.","sig":null,"attributes":[{"value":"/ Creates a timer that expires after the given duration of time.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":4522,"byte_end":4588,"line_start":149,"line_end":149,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":4593,"byte_end":4596,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":4601,"byte_end":4615,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":4620,"byte_end":4623,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":4628,"byte_end":4635,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":4640,"byte_end":4664,"line_start":154,"line_end":154,"column_start":5,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":4669,"byte_end":4697,"line_start":155,"line_end":155,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":4702,"byte_end":4705,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":4710,"byte_end":4754,"line_start":157,"line_end":157,"column_start":5,"column_end":49}},{"value":"/ Timer::after(Duration::from_secs(1)).await;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":4759,"byte_end":4806,"line_start":158,"line_end":158,"column_start":5,"column_end":52}},{"value":"/ # });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":4811,"byte_end":4820,"line_start":159,"line_end":159,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":4825,"byte_end":4832,"line_start":160,"line_end":160,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5325,"byte_end":5327,"line_start":179,"line_end":179,"column_start":12,"column_end":14},"name":"at","qualname":"<Timer>::at","value":"fn (instant: Instant) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that expires at the given time instant.","sig":null,"attributes":[{"value":"/ Creates a timer that expires at the given time instant.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":4937,"byte_end":4996,"line_start":165,"line_end":165,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5001,"byte_end":5004,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5009,"byte_end":5023,"line_start":167,"line_end":167,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5028,"byte_end":5031,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5036,"byte_end":5043,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5048,"byte_end":5072,"line_start":170,"line_end":170,"column_start":5,"column_end":29}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5077,"byte_end":5116,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5121,"byte_end":5124,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5129,"byte_end":5173,"line_start":173,"line_end":173,"column_start":5,"column_end":49}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5178,"byte_end":5207,"line_start":174,"line_end":174,"column_start":5,"column_end":34}},{"value":"/ let when = now + Duration::from_secs(1);","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5212,"byte_end":5256,"line_start":175,"line_end":175,"column_start":5,"column_end":49}},{"value":"/ Timer::at(when).await;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5261,"byte_end":5287,"line_start":176,"line_end":176,"column_start":5,"column_end":31}},{"value":"/ # });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5292,"byte_end":5301,"line_start":177,"line_end":177,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5306,"byte_end":5313,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":6047,"byte_end":6056,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"set_after","qualname":"<Timer>::set_after","value":"fn (&mut self, duration: Duration) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the timer to expire after the new duration of time.","sig":null,"attributes":[{"value":"/ Sets the timer to expire after the new duration of time.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5453,"byte_end":5513,"line_start":186,"line_end":186,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5518,"byte_end":5521,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Note that resetting a timer is different from creating a new timer because","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5526,"byte_end":5604,"line_start":188,"line_end":188,"column_start":5,"column_end":83}},{"value":"/ [`set_after()`][`Timer::set_after()`] does not remove the waker associated with the task","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5609,"byte_end":5701,"line_start":189,"line_end":189,"column_start":5,"column_end":97}},{"value":"/ that is polling the timer.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5706,"byte_end":5736,"line_start":190,"line_end":190,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5741,"byte_end":5744,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5749,"byte_end":5763,"line_start":192,"line_end":192,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5768,"byte_end":5771,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5776,"byte_end":5783,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5788,"byte_end":5812,"line_start":195,"line_end":195,"column_start":5,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5817,"byte_end":5845,"line_start":196,"line_end":196,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5850,"byte_end":5853,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5858,"byte_end":5902,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/ let mut t = Timer::after(Duration::from_secs(1));","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5907,"byte_end":5960,"line_start":199,"line_end":199,"column_start":5,"column_end":58}},{"value":"/ t.set_after(Duration::from_millis(100));","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":5965,"byte_end":6009,"line_start":200,"line_end":200,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":6014,"byte_end":6023,"line_start":201,"line_end":201,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":6028,"byte_end":6035,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":6813,"byte_end":6819,"line_start":227,"line_end":227,"column_start":12,"column_end":18},"name":"set_at","qualname":"<Timer>::set_at","value":"fn (&mut self, instant: Instant) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the timer to expire at the new time instant.","sig":null,"attributes":[{"value":"/ Sets the timer to expire at the new time instant.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":6149,"byte_end":6202,"line_start":207,"line_end":207,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":6207,"byte_end":6210,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Note that resetting a timer is different from creating a new timer because","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":6215,"byte_end":6293,"line_start":209,"line_end":209,"column_start":5,"column_end":83}},{"value":"/ [`set_after()`][`Timer::set_after()`] does not remove the waker associated with the task","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":6298,"byte_end":6390,"line_start":210,"line_end":210,"column_start":5,"column_end":97}},{"value":"/ that is polling the timer.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":6395,"byte_end":6425,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":6430,"byte_end":6433,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":6438,"byte_end":6452,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":6457,"byte_end":6460,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":6465,"byte_end":6472,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":6477,"byte_end":6501,"line_start":216,"line_end":216,"column_start":5,"column_end":29}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":6506,"byte_end":6545,"line_start":217,"line_end":217,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":6550,"byte_end":6553,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":6558,"byte_end":6602,"line_start":219,"line_end":219,"column_start":5,"column_end":49}},{"value":"/ let mut t = Timer::after(Duration::from_secs(1));","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":6607,"byte_end":6660,"line_start":220,"line_end":220,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":6665,"byte_end":6668,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":6673,"byte_end":6702,"line_start":222,"line_end":222,"column_start":5,"column_end":34}},{"value":"/ let when = now + Duration::from_secs(1);","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":6707,"byte_end":6751,"line_start":223,"line_end":223,"column_start":5,"column_end":49}},{"value":"/ t.set_at(when);","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":6756,"byte_end":6775,"line_start":224,"line_end":224,"column_start":5,"column_end":24}},{"value":"/ # });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":6780,"byte_end":6789,"line_start":225,"line_end":225,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":6794,"byte_end":6801,"line_start":226,"line_end":226,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":390},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10690,"byte_end":10695,"line_start":334,"line_end":334,"column_start":12,"column_end":17},"name":"Async","qualname":"::Async","value":"Async {  }","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393}],"decl_id":null,"docs":" Async adapter for I/O types.","sig":null,"attributes":[{"value":"/ Async adapter for I/O types.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":8853,"byte_end":8885,"line_start":285,"line_end":285,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":8886,"byte_end":8889,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ This type puts an I/O handle into non-blocking mode, registers it in","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":8890,"byte_end":8962,"line_start":287,"line_end":287,"column_start":1,"column_end":73}},{"value":"/ [epoll]/[kqueue]/[event ports]/[wepoll], and then provides an async interface for it.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":8963,"byte_end":9052,"line_start":288,"line_end":288,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":9053,"byte_end":9056,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ **NOTE:** Do not use this type with [`File`][`std::fs::File`], [`Stdin`][`std::io::Stdin`],","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":9057,"byte_end":9152,"line_start":290,"line_end":290,"column_start":1,"column_end":96}},{"value":"/ [`Stdout`][`std::io::Stdout`], or [`Stderr`][`std::io::Stderr`] because all of the supported","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":9153,"byte_end":9249,"line_start":291,"line_end":291,"column_start":1,"column_end":97}},{"value":"/ operating systems have issues with them when put in non-blocking mode.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":9250,"byte_end":9324,"line_start":292,"line_end":292,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":9325,"byte_end":9328,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ [epoll]: https://en.wikipedia.org/wiki/Epoll","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":9329,"byte_end":9377,"line_start":294,"line_end":294,"column_start":1,"column_end":49}},{"value":"/ [kqueue]: https://en.wikipedia.org/wiki/Kqueue","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":9378,"byte_end":9428,"line_start":295,"line_end":295,"column_start":1,"column_end":51}},{"value":"/ [event ports]: https://illumos.org/man/port_create","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":9429,"byte_end":9483,"line_start":296,"line_end":296,"column_start":1,"column_end":55}},{"value":"/ [wepoll]: https://github.com/piscisaureus/wepoll","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":9484,"byte_end":9536,"line_start":297,"line_end":297,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":9537,"byte_end":9540,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":9541,"byte_end":9555,"line_start":299,"line_end":299,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":9556,"byte_end":9559,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ Connect to a server and echo incoming messages back to the server:","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":9560,"byte_end":9630,"line_start":301,"line_end":301,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":9631,"byte_end":9634,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":9635,"byte_end":9648,"line_start":303,"line_end":303,"column_start":1,"column_end":14}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":9649,"byte_end":9673,"line_start":304,"line_end":304,"column_start":1,"column_end":25}},{"value":"/ use futures_lite::io;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":9674,"byte_end":9699,"line_start":305,"line_end":305,"column_start":1,"column_end":26}},{"value":"/ use std::net::TcpStream;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":9700,"byte_end":9728,"line_start":306,"line_end":306,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":9729,"byte_end":9732,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":9733,"byte_end":9777,"line_start":308,"line_end":308,"column_start":1,"column_end":45}},{"value":"/ // Connect to a local server.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":9778,"byte_end":9811,"line_start":309,"line_end":309,"column_start":1,"column_end":34}},{"value":"/ let stream = Async::<TcpStream>::connect(([127, 0, 0, 1], 8000)).await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":9812,"byte_end":9888,"line_start":310,"line_end":310,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":9889,"byte_end":9892,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ // Echo all messages from the read side of the stream into the write side.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":9893,"byte_end":9971,"line_start":312,"line_end":312,"column_start":1,"column_end":79}},{"value":"/ io::copy(&stream, &stream).await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":9972,"byte_end":10010,"line_start":313,"line_end":313,"column_start":1,"column_end":39}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10011,"byte_end":10044,"line_start":314,"line_end":314,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10045,"byte_end":10052,"line_start":315,"line_end":315,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10053,"byte_end":10056,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ You can use either predefined async methods or wrap blocking I/O operations in","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10057,"byte_end":10139,"line_start":317,"line_end":317,"column_start":1,"column_end":83}},{"value":"/ [`Async::read_with()`], [`Async::read_with_mut()`], [`Async::write_with()`], and","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10140,"byte_end":10224,"line_start":318,"line_end":318,"column_start":1,"column_end":85}},{"value":"/ [`Async::write_with_mut()`]:","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10225,"byte_end":10257,"line_start":319,"line_end":319,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10258,"byte_end":10261,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10262,"byte_end":10275,"line_start":321,"line_end":321,"column_start":1,"column_end":14}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10276,"byte_end":10300,"line_start":322,"line_end":322,"column_start":1,"column_end":25}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10301,"byte_end":10331,"line_start":323,"line_end":323,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10332,"byte_end":10335,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10336,"byte_end":10380,"line_start":325,"line_end":325,"column_start":1,"column_end":45}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10381,"byte_end":10449,"line_start":326,"line_end":326,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10450,"byte_end":10453,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ // These two lines are equivalent:","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10454,"byte_end":10492,"line_start":328,"line_end":328,"column_start":1,"column_end":39}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10493,"byte_end":10543,"line_start":329,"line_end":329,"column_start":1,"column_end":51}},{"value":"/ let (stream, addr) = listener.read_with(|inner| inner.accept()).await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10544,"byte_end":10619,"line_start":330,"line_end":330,"column_start":1,"column_end":76}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10620,"byte_end":10653,"line_start":331,"line_end":331,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10654,"byte_end":10661,"line_start":332,"line_end":332,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":11802,"byte_end":11805,"line_start":370,"line_end":370,"column_start":12,"column_end":15},"name":"new","qualname":"<Async<T>>::new","value":"fn (io: T) -> io::Result<Async<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an async I/O handle.","sig":null,"attributes":[{"value":"/ Creates an async I/O handle.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10899,"byte_end":10931,"line_start":346,"line_end":346,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10936,"byte_end":10939,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ This function will put the handle in non-blocking mode and register it in","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10944,"byte_end":11021,"line_start":348,"line_end":348,"column_start":5,"column_end":82}},{"value":"/ [epoll]/[kqueue]/[event ports]/[wepoll].","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":11026,"byte_end":11070,"line_start":349,"line_end":349,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":11075,"byte_end":11078,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ On Unix systems, the handle must implement `AsRawFd`, while on Windows it must implement","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":11083,"byte_end":11175,"line_start":351,"line_end":351,"column_start":5,"column_end":97}},{"value":"/ `AsRawSocket`.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":11180,"byte_end":11198,"line_start":352,"line_end":352,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":11203,"byte_end":11206,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ [epoll]: https://en.wikipedia.org/wiki/Epoll","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":11211,"byte_end":11259,"line_start":354,"line_end":354,"column_start":5,"column_end":53}},{"value":"/ [kqueue]: https://en.wikipedia.org/wiki/Kqueue","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":11264,"byte_end":11314,"line_start":355,"line_end":355,"column_start":5,"column_end":55}},{"value":"/ [event ports]: https://illumos.org/man/port_create","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":11319,"byte_end":11373,"line_start":356,"line_end":356,"column_start":5,"column_end":59}},{"value":"/ [wepoll]: https://github.com/piscisaureus/wepoll","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":11378,"byte_end":11430,"line_start":357,"line_end":357,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":11435,"byte_end":11438,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":11443,"byte_end":11457,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":11462,"byte_end":11465,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":11470,"byte_end":11477,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":11482,"byte_end":11506,"line_start":362,"line_end":362,"column_start":5,"column_end":29}},{"value":"/ use std::net::{SocketAddr, TcpListener};","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":11511,"byte_end":11555,"line_start":363,"line_end":363,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":11560,"byte_end":11563,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":11568,"byte_end":11612,"line_start":365,"line_end":365,"column_start":5,"column_end":49}},{"value":"/ let listener = TcpListener::bind(SocketAddr::from(([127, 0, 0, 1], 0)))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":11617,"byte_end":11694,"line_start":366,"line_end":366,"column_start":5,"column_end":82}},{"value":"/ let listener = Async::new(listener)?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":11699,"byte_end":11740,"line_start":367,"line_end":367,"column_start":5,"column_end":46}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":11745,"byte_end":11778,"line_start":368,"line_end":368,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":11783,"byte_end":11790,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":13763,"byte_end":13770,"line_start":440,"line_end":440,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Async<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the inner I/O handle.","sig":null,"attributes":[{"value":"/ Gets a reference to the inner I/O handle.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":13375,"byte_end":13420,"line_start":427,"line_end":427,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":13425,"byte_end":13428,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":13433,"byte_end":13447,"line_start":429,"line_end":429,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":13452,"byte_end":13455,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":13460,"byte_end":13467,"line_start":431,"line_end":431,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":13472,"byte_end":13496,"line_start":432,"line_end":432,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":13501,"byte_end":13531,"line_start":433,"line_end":433,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":13536,"byte_end":13539,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":13544,"byte_end":13588,"line_start":435,"line_end":435,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":13593,"byte_end":13661,"line_start":436,"line_end":436,"column_start":5,"column_end":73}},{"value":"/ let inner = listener.get_ref();","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":13666,"byte_end":13701,"line_start":437,"line_end":437,"column_start":5,"column_end":40}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":13706,"byte_end":13739,"line_start":438,"line_end":438,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":13744,"byte_end":13751,"line_start":439,"line_end":439,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14231,"byte_end":14238,"line_start":457,"line_end":457,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Async<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the inner I/O handle.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the inner I/O handle.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":13831,"byte_end":13884,"line_start":444,"line_end":444,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":13889,"byte_end":13892,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":13897,"byte_end":13911,"line_start":446,"line_end":446,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":13916,"byte_end":13919,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":13924,"byte_end":13931,"line_start":448,"line_end":448,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":13936,"byte_end":13960,"line_start":449,"line_end":449,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":13965,"byte_end":13995,"line_start":450,"line_end":450,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14000,"byte_end":14003,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14008,"byte_end":14052,"line_start":452,"line_end":452,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14057,"byte_end":14129,"line_start":453,"line_end":453,"column_start":5,"column_end":77}},{"value":"/ let inner = listener.get_mut();","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14134,"byte_end":14169,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14174,"byte_end":14207,"line_start":455,"line_end":455,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14212,"byte_end":14219,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14872,"byte_end":14882,"line_start":479,"line_end":479,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Async<T>>::into_inner","value":"fn (mut self) -> io::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the inner I/O handle.","sig":null,"attributes":[{"value":"/ Unwraps the inner I/O handle.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14307,"byte_end":14340,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14345,"byte_end":14348,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ This method will **not** put the I/O handle back into blocking mode.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14353,"byte_end":14425,"line_start":463,"line_end":463,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14430,"byte_end":14433,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14438,"byte_end":14452,"line_start":465,"line_end":465,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14457,"byte_end":14460,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14465,"byte_end":14472,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14477,"byte_end":14501,"line_start":468,"line_end":468,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14506,"byte_end":14536,"line_start":469,"line_end":469,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14541,"byte_end":14544,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14549,"byte_end":14593,"line_start":471,"line_end":471,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14598,"byte_end":14666,"line_start":472,"line_end":472,"column_start":5,"column_end":73}},{"value":"/ let inner = listener.into_inner()?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14671,"byte_end":14710,"line_start":473,"line_end":473,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14715,"byte_end":14718,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ // Put the listener back into blocking mode.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14723,"byte_end":14771,"line_start":475,"line_end":475,"column_start":5,"column_end":53}},{"value":"/ inner.set_nonblocking(false)?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14776,"byte_end":14810,"line_start":476,"line_end":476,"column_start":5,"column_end":39}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14815,"byte_end":14848,"line_start":477,"line_end":477,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":14853,"byte_end":14860,"line_start":478,"line_end":478,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15580,"byte_end":15588,"line_start":502,"line_end":502,"column_start":18,"column_end":26},"name":"readable","qualname":"<Async<T>>::readable","value":"fn (&self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Waits until the I/O handle is readable.","sig":null,"attributes":[{"value":"/ Waits until the I/O handle is readable.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15029,"byte_end":15072,"line_start":485,"line_end":485,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15077,"byte_end":15080,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ This function completes when a read operation on this I/O handle wouldn't block.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15085,"byte_end":15169,"line_start":487,"line_end":487,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15174,"byte_end":15177,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15182,"byte_end":15196,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15201,"byte_end":15204,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15209,"byte_end":15222,"line_start":491,"line_end":491,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15227,"byte_end":15251,"line_start":492,"line_end":492,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15256,"byte_end":15286,"line_start":493,"line_end":493,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15291,"byte_end":15294,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15299,"byte_end":15343,"line_start":495,"line_end":495,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15348,"byte_end":15420,"line_start":496,"line_end":496,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15425,"byte_end":15428,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ // Wait until a client can be accepted.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15433,"byte_end":15476,"line_start":498,"line_end":498,"column_start":5,"column_end":48}},{"value":"/ listener.readable().await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15481,"byte_end":15512,"line_start":499,"line_end":499,"column_start":5,"column_end":36}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15517,"byte_end":15550,"line_start":500,"line_end":500,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15555,"byte_end":15562,"line_start":501,"line_end":501,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":16279,"byte_end":16287,"line_start":524,"line_end":524,"column_start":18,"column_end":26},"name":"writable","qualname":"<Async<T>>::writable","value":"fn (&self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Waits until the I/O handle is writable.","sig":null,"attributes":[{"value":"/ Waits until the I/O handle is writable.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15664,"byte_end":15707,"line_start":506,"line_end":506,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15712,"byte_end":15715,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ This function completes when a write operation on this I/O handle wouldn't block.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15720,"byte_end":15805,"line_start":508,"line_end":508,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15810,"byte_end":15813,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15818,"byte_end":15832,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15837,"byte_end":15840,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15845,"byte_end":15852,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15857,"byte_end":15881,"line_start":513,"line_end":513,"column_start":5,"column_end":29}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15886,"byte_end":15931,"line_start":514,"line_end":514,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15936,"byte_end":15939,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15944,"byte_end":15988,"line_start":516,"line_end":516,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":15993,"byte_end":16060,"line_start":517,"line_end":517,"column_start":5,"column_end":72}},{"value":"/ let stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":16065,"byte_end":16123,"line_start":518,"line_end":518,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":16128,"byte_end":16131,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ // Wait until the stream is writable.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":16136,"byte_end":16177,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ stream.writable().await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":16182,"byte_end":16211,"line_start":521,"line_end":521,"column_start":5,"column_end":34}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":16216,"byte_end":16249,"line_start":522,"line_end":522,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":16254,"byte_end":16261,"line_start":523,"line_end":523,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":17279,"byte_end":17288,"line_start":550,"line_end":550,"column_start":18,"column_end":27},"name":"read_with","qualname":"<Async<T>>::read_with","value":"fn <R> (&self, op: impl FnMut(&T) -> io::Result<R>) -> io::Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Performs a read operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a read operation asynchronously.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":16363,"byte_end":16408,"line_start":528,"line_end":528,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":16413,"byte_end":16416,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This function","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":16421,"byte_end":16512,"line_start":530,"line_end":530,"column_start":5,"column_end":96}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":16517,"byte_end":16604,"line_start":531,"line_end":531,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":16609,"byte_end":16700,"line_start":532,"line_end":532,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is readable.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":16705,"byte_end":16762,"line_start":533,"line_end":533,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":16767,"byte_end":16770,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ The closure receives a shared reference to the I/O handle.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":16775,"byte_end":16837,"line_start":535,"line_end":535,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":16842,"byte_end":16845,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":16850,"byte_end":16864,"line_start":537,"line_end":537,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":16869,"byte_end":16872,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":16877,"byte_end":16890,"line_start":539,"line_end":539,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":16895,"byte_end":16919,"line_start":540,"line_end":540,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":16924,"byte_end":16954,"line_start":541,"line_end":541,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":16959,"byte_end":16962,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":16967,"byte_end":17011,"line_start":543,"line_end":543,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":17016,"byte_end":17084,"line_start":544,"line_end":544,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":17089,"byte_end":17092,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ // Accept a new client asynchronously.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":17097,"byte_end":17139,"line_start":546,"line_end":546,"column_start":5,"column_end":47}},{"value":"/ let (stream, addr) = listener.read_with(|l| l.accept()).await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":17144,"byte_end":17211,"line_start":547,"line_end":547,"column_start":5,"column_end":72}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":17216,"byte_end":17249,"line_start":548,"line_end":548,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":17254,"byte_end":17261,"line_start":549,"line_end":549,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":18885,"byte_end":18898,"line_start":591,"line_end":591,"column_start":18,"column_end":31},"name":"read_with_mut","qualname":"<Async<T>>::read_with_mut","value":"fn <R> (&mut self, op: impl FnMut(&mut T) -> io::Result<R>) -> io::Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Performs a read operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a read operation asynchronously.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":17960,"byte_end":18005,"line_start":569,"line_end":569,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":18010,"byte_end":18013,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This function","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":18018,"byte_end":18109,"line_start":571,"line_end":571,"column_start":5,"column_end":96}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":18114,"byte_end":18201,"line_start":572,"line_end":572,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":18206,"byte_end":18297,"line_start":573,"line_end":573,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is readable.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":18302,"byte_end":18359,"line_start":574,"line_end":574,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":18364,"byte_end":18367,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ The closure receives a mutable reference to the I/O handle.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":18372,"byte_end":18435,"line_start":576,"line_end":576,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":18440,"byte_end":18443,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":18448,"byte_end":18462,"line_start":578,"line_end":578,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":18467,"byte_end":18470,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":18475,"byte_end":18488,"line_start":580,"line_end":580,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":18493,"byte_end":18517,"line_start":581,"line_end":581,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":18522,"byte_end":18552,"line_start":582,"line_end":582,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":18557,"byte_end":18560,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":18565,"byte_end":18609,"line_start":584,"line_end":584,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":18614,"byte_end":18686,"line_start":585,"line_end":585,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":18691,"byte_end":18694,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ // Accept a new client asynchronously.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":18699,"byte_end":18741,"line_start":587,"line_end":587,"column_start":5,"column_end":47}},{"value":"/ let (stream, addr) = listener.read_with_mut(|l| l.accept()).await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":18746,"byte_end":18817,"line_start":588,"line_end":588,"column_start":5,"column_end":76}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":18822,"byte_end":18855,"line_start":589,"line_end":589,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":18860,"byte_end":18867,"line_start":590,"line_end":590,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":20538,"byte_end":20548,"line_start":636,"line_end":636,"column_start":18,"column_end":28},"name":"write_with","qualname":"<Async<T>>::write_with","value":"fn <R> (&self, op: impl FnMut(&T) -> io::Result<R>) -> io::Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Performs a write operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a write operation asynchronously.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":19601,"byte_end":19647,"line_start":613,"line_end":613,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":19652,"byte_end":19655,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This function","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":19660,"byte_end":19751,"line_start":615,"line_end":615,"column_start":5,"column_end":96}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":19756,"byte_end":19843,"line_start":616,"line_end":616,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":19848,"byte_end":19939,"line_start":617,"line_end":617,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is writable.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":19944,"byte_end":20001,"line_start":618,"line_end":618,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":20006,"byte_end":20009,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ The closure receives a shared reference to the I/O handle.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":20014,"byte_end":20076,"line_start":620,"line_end":620,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":20081,"byte_end":20084,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":20089,"byte_end":20103,"line_start":622,"line_end":622,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":20108,"byte_end":20111,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":20116,"byte_end":20129,"line_start":624,"line_end":624,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":20134,"byte_end":20158,"line_start":625,"line_end":625,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":20163,"byte_end":20191,"line_start":626,"line_end":626,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":20196,"byte_end":20199,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":20204,"byte_end":20248,"line_start":628,"line_end":628,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":20253,"byte_end":20320,"line_start":629,"line_end":629,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":20325,"byte_end":20373,"line_start":630,"line_end":630,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":20378,"byte_end":20381,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":20386,"byte_end":20409,"line_start":632,"line_end":632,"column_start":5,"column_end":28}},{"value":"/ let len = socket.write_with(|s| s.send(msg)).await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":20414,"byte_end":20470,"line_start":633,"line_end":633,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":20475,"byte_end":20508,"line_start":634,"line_end":634,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":20513,"byte_end":20520,"line_start":635,"line_end":635,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":22167,"byte_end":22181,"line_start":678,"line_end":678,"column_start":18,"column_end":32},"name":"write_with_mut","qualname":"<Async<T>>::write_with_mut","value":"fn <R> (&mut self, op: impl FnMut(&mut T) -> io::Result<R>) -> io::Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Performs a write operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a write operation asynchronously.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":21221,"byte_end":21267,"line_start":655,"line_end":655,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":21272,"byte_end":21275,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This function","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":21280,"byte_end":21371,"line_start":657,"line_end":657,"column_start":5,"column_end":96}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":21376,"byte_end":21463,"line_start":658,"line_end":658,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":21468,"byte_end":21559,"line_start":659,"line_end":659,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is writable.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":21564,"byte_end":21621,"line_start":660,"line_end":660,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":21626,"byte_end":21629,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ The closure receives a mutable reference to the I/O handle.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":21634,"byte_end":21697,"line_start":662,"line_end":662,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":21702,"byte_end":21705,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":21710,"byte_end":21724,"line_start":664,"line_end":664,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":21729,"byte_end":21732,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":21737,"byte_end":21750,"line_start":666,"line_end":666,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":21755,"byte_end":21779,"line_start":667,"line_end":667,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":21784,"byte_end":21812,"line_start":668,"line_end":668,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":21817,"byte_end":21820,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":21825,"byte_end":21869,"line_start":670,"line_end":670,"column_start":5,"column_end":49}},{"value":"/ let mut socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":21874,"byte_end":21945,"line_start":671,"line_end":671,"column_start":5,"column_end":76}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":21950,"byte_end":21998,"line_start":672,"line_end":672,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":22003,"byte_end":22006,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":22011,"byte_end":22034,"line_start":674,"line_end":674,"column_start":5,"column_end":28}},{"value":"/ let len = socket.write_with_mut(|s| s.send(msg)).await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":22039,"byte_end":22099,"line_start":675,"line_end":675,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":22104,"byte_end":22137,"line_start":676,"line_end":676,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":22142,"byte_end":22149,"line_start":677,"line_end":677,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26373,"byte_end":26377,"line_start":823,"line_end":823,"column_start":12,"column_end":16},"name":"bind","qualname":"<Async<TcpListener>>::bind","value":"fn <A> (addr: A) -> io::Result<Async<TcpListener>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a TCP listener bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a TCP listener bound to the specified address.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":25854,"byte_end":25912,"line_start":808,"line_end":808,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":25917,"byte_end":25920,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ Binding with port number 0 will request an available port from the OS.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":25925,"byte_end":25999,"line_start":810,"line_end":810,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26004,"byte_end":26007,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26012,"byte_end":26026,"line_start":812,"line_end":812,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26031,"byte_end":26034,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26039,"byte_end":26046,"line_start":814,"line_end":814,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26051,"byte_end":26075,"line_start":815,"line_end":815,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26080,"byte_end":26110,"line_start":816,"line_end":816,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26115,"byte_end":26118,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26123,"byte_end":26167,"line_start":818,"line_end":818,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26172,"byte_end":26240,"line_start":819,"line_end":819,"column_start":5,"column_end":73}},{"value":"/ println!(\"Listening on {}\", listener.get_ref().local_addr()?);","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26245,"byte_end":26311,"line_start":820,"line_end":820,"column_start":5,"column_end":71}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26316,"byte_end":26349,"line_start":821,"line_end":821,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26354,"byte_end":26361,"line_start":822,"line_end":822,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":27127,"byte_end":27133,"line_start":845,"line_end":845,"column_start":18,"column_end":24},"name":"accept","qualname":"<Async<TcpListener>>::accept","value":"fn (&self) -> io::Result<(Async<TcpStream>, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming TCP connection.","sig":null,"attributes":[{"value":"/ Accepts a new incoming TCP connection.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26537,"byte_end":26579,"line_start":828,"line_end":828,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26584,"byte_end":26587,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, it will be returned as a TCP stream together with its","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26592,"byte_end":26683,"line_start":830,"line_end":830,"column_start":5,"column_end":96}},{"value":"/ remote address.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26688,"byte_end":26707,"line_start":831,"line_end":831,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26712,"byte_end":26715,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26720,"byte_end":26734,"line_start":833,"line_end":833,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26739,"byte_end":26742,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26747,"byte_end":26760,"line_start":835,"line_end":835,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26765,"byte_end":26789,"line_start":836,"line_end":836,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26794,"byte_end":26824,"line_start":837,"line_end":837,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26829,"byte_end":26832,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26837,"byte_end":26881,"line_start":839,"line_end":839,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26886,"byte_end":26957,"line_start":840,"line_end":840,"column_start":5,"column_end":76}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":26962,"byte_end":27012,"line_start":841,"line_end":841,"column_start":5,"column_end":55}},{"value":"/ println!(\"Accepted client: {}\", addr);","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":27017,"byte_end":27059,"line_start":842,"line_end":842,"column_start":5,"column_end":47}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":27064,"byte_end":27097,"line_start":843,"line_end":843,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":27102,"byte_end":27109,"line_start":844,"line_end":844,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":28053,"byte_end":28061,"line_start":872,"line_end":872,"column_start":12,"column_end":20},"name":"incoming","qualname":"<Async<TcpListener>>::incoming","value":"fn (&self) -> impl Stream<Item = io::Result<Async<TcpStream>>> + Send + '_","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming TCP connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming TCP connections.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":27310,"byte_end":27359,"line_start":850,"line_end":850,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":27364,"byte_end":27367,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ The stream is infinite, i.e. it never stops with a [`None`].","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":27372,"byte_end":27436,"line_start":852,"line_end":852,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":27441,"byte_end":27444,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":27449,"byte_end":27463,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":27468,"byte_end":27471,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":27476,"byte_end":27489,"line_start":856,"line_end":856,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":27494,"byte_end":27518,"line_start":857,"line_end":857,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::{pin, stream::StreamExt};","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":27523,"byte_end":27570,"line_start":858,"line_end":858,"column_start":5,"column_end":52}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":27575,"byte_end":27605,"line_start":859,"line_end":859,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":27610,"byte_end":27613,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":27618,"byte_end":27662,"line_start":861,"line_end":861,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":27667,"byte_end":27738,"line_start":862,"line_end":862,"column_start":5,"column_end":76}},{"value":"/ let incoming = listener.incoming();","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":27743,"byte_end":27782,"line_start":863,"line_end":863,"column_start":5,"column_end":44}},{"value":"/ pin!(incoming);","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":27787,"byte_end":27806,"line_start":864,"line_end":864,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":27811,"byte_end":27814,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":27819,"byte_end":27871,"line_start":866,"line_end":866,"column_start":5,"column_end":57}},{"value":"/     let stream = stream?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":27876,"byte_end":27905,"line_start":867,"line_end":867,"column_start":5,"column_end":34}},{"value":"/     println!(\"Accepted client: {}\", stream.get_ref().peer_addr()?);","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":27910,"byte_end":27981,"line_start":868,"line_end":868,"column_start":5,"column_end":76}},{"value":"/ }","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":27986,"byte_end":27991,"line_start":869,"line_end":869,"column_start":5,"column_end":10}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":27996,"byte_end":28029,"line_start":870,"line_end":870,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":28034,"byte_end":28041,"line_start":871,"line_end":871,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":28992,"byte_end":28999,"line_start":902,"line_end":902,"column_start":18,"column_end":25},"name":"connect","qualname":"<Async<TcpStream>>::connect","value":"fn <A> (addr: A) -> io::Result<Async<TcpStream>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a TCP connection to the specified address.","sig":null,"attributes":[{"value":"/ Creates a TCP connection to the specified address.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":28552,"byte_end":28606,"line_start":889,"line_end":889,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":28611,"byte_end":28614,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":28619,"byte_end":28633,"line_start":891,"line_end":891,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":28638,"byte_end":28641,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":28646,"byte_end":28653,"line_start":893,"line_end":893,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":28658,"byte_end":28682,"line_start":894,"line_end":894,"column_start":5,"column_end":29}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":28687,"byte_end":28732,"line_start":895,"line_end":895,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":28737,"byte_end":28740,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":28745,"byte_end":28789,"line_start":897,"line_end":897,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":28794,"byte_end":28861,"line_start":898,"line_end":898,"column_start":5,"column_end":72}},{"value":"/ let stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":28866,"byte_end":28924,"line_start":899,"line_end":899,"column_start":5,"column_end":63}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":28929,"byte_end":28962,"line_start":900,"line_end":900,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":28967,"byte_end":28974,"line_start":901,"line_end":901,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30268,"byte_end":30272,"line_start":939,"line_end":939,"column_start":18,"column_end":22},"name":"peek","qualname":"<Async<TcpStream>>::peek","value":"fn (&self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Reads data from the stream without removing it from the buffer.","sig":null,"attributes":[{"value":"/ Reads data from the stream without removing it from the buffer.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":29437,"byte_end":29504,"line_start":916,"line_end":916,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":29509,"byte_end":29512,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read. Successive calls of this method read the same data.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":29517,"byte_end":29606,"line_start":918,"line_end":918,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":29611,"byte_end":29614,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":29619,"byte_end":29633,"line_start":920,"line_end":920,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":29638,"byte_end":29641,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":29646,"byte_end":29653,"line_start":922,"line_end":922,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":29658,"byte_end":29682,"line_start":923,"line_end":923,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::{io::AsyncWriteExt, stream::StreamExt};","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":29687,"byte_end":29748,"line_start":924,"line_end":924,"column_start":5,"column_end":66}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":29753,"byte_end":29798,"line_start":925,"line_end":925,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":29803,"byte_end":29806,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":29811,"byte_end":29855,"line_start":927,"line_end":927,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":29860,"byte_end":29927,"line_start":928,"line_end":928,"column_start":5,"column_end":72}},{"value":"/ let mut stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":29932,"byte_end":29994,"line_start":929,"line_end":929,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":29999,"byte_end":30002,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ stream","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30007,"byte_end":30017,"line_start":931,"line_end":931,"column_start":5,"column_end":15}},{"value":"/     .write_all(b\"GET / HTTP/1.1\\r\\nHost: example.com\\r\\n\\r\\n\")","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30022,"byte_end":30088,"line_start":932,"line_end":932,"column_start":5,"column_end":71}},{"value":"/     .await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30093,"byte_end":30109,"line_start":933,"line_end":933,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30114,"byte_end":30117,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30122,"byte_end":30152,"line_start":935,"line_end":935,"column_start":5,"column_end":35}},{"value":"/ let len = stream.peek(&mut buf).await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30157,"byte_end":30200,"line_start":936,"line_end":936,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30205,"byte_end":30238,"line_start":937,"line_end":937,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30243,"byte_end":30250,"line_start":938,"line_end":938,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":31108,"byte_end":31112,"line_start":968,"line_end":968,"column_start":12,"column_end":16},"name":"bind","qualname":"<Async<UdpSocket>>::bind","value":"fn <A> (addr: A) -> io::Result<Async<UdpSocket>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket bound to the specified address.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30603,"byte_end":30659,"line_start":953,"line_end":953,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30664,"byte_end":30667,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ Binding with port number 0 will request an available port from the OS.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30672,"byte_end":30746,"line_start":955,"line_end":955,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30751,"byte_end":30754,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30759,"byte_end":30773,"line_start":957,"line_end":957,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30778,"byte_end":30781,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30786,"byte_end":30793,"line_start":959,"line_end":959,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30798,"byte_end":30822,"line_start":960,"line_end":960,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30827,"byte_end":30855,"line_start":961,"line_end":961,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30860,"byte_end":30863,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30868,"byte_end":30912,"line_start":963,"line_end":963,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30917,"byte_end":30981,"line_start":964,"line_end":964,"column_start":5,"column_end":69}},{"value":"/ println!(\"Bound to {}\", socket.get_ref().local_addr()?);","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30986,"byte_end":31046,"line_start":965,"line_end":965,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":31051,"byte_end":31084,"line_start":966,"line_end":966,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":31089,"byte_end":31096,"line_start":967,"line_end":967,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":31993,"byte_end":32002,"line_start":993,"line_end":993,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<Async<UdpSocket>>::recv_from","value":"fn (&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message.","sig":null,"attributes":[{"value":"/ Receives a single datagram message.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":31268,"byte_end":31307,"line_start":973,"line_end":973,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":31312,"byte_end":31315,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":31320,"byte_end":31395,"line_start":975,"line_end":975,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":31400,"byte_end":31403,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":31408,"byte_end":31502,"line_start":977,"line_end":977,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":31507,"byte_end":31577,"line_start":978,"line_end":978,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":31582,"byte_end":31585,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":31590,"byte_end":31604,"line_start":980,"line_end":980,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":31609,"byte_end":31612,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":31617,"byte_end":31630,"line_start":982,"line_end":982,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":31635,"byte_end":31659,"line_start":983,"line_end":983,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":31664,"byte_end":31692,"line_start":984,"line_end":984,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":31697,"byte_end":31700,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":31705,"byte_end":31749,"line_start":986,"line_end":986,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":31754,"byte_end":31821,"line_start":987,"line_end":987,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":31826,"byte_end":31829,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":31834,"byte_end":31864,"line_start":989,"line_end":989,"column_start":5,"column_end":35}},{"value":"/ let (len, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":31869,"byte_end":31925,"line_start":990,"line_end":990,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":31930,"byte_end":31963,"line_start":991,"line_end":991,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":31968,"byte_end":31975,"line_start":992,"line_end":992,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":32887,"byte_end":32896,"line_start":1017,"line_end":1017,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<Async<UdpSocket>>::peek_from","value":"fn (&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives a single datagram message without removing it from the queue.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":32127,"byte_end":32201,"line_start":997,"line_end":997,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":32206,"byte_end":32209,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":32214,"byte_end":32289,"line_start":999,"line_end":999,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":32294,"byte_end":32297,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":32302,"byte_end":32396,"line_start":1001,"line_end":1001,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":32401,"byte_end":32471,"line_start":1002,"line_end":1002,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":32476,"byte_end":32479,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":32484,"byte_end":32498,"line_start":1004,"line_end":1004,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":32503,"byte_end":32506,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":32511,"byte_end":32524,"line_start":1006,"line_end":1006,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":32529,"byte_end":32553,"line_start":1007,"line_end":1007,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":32558,"byte_end":32586,"line_start":1008,"line_end":1008,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":32591,"byte_end":32594,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":32599,"byte_end":32643,"line_start":1010,"line_end":1010,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":32648,"byte_end":32715,"line_start":1011,"line_end":1011,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":32720,"byte_end":32723,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":32728,"byte_end":32758,"line_start":1013,"line_end":1013,"column_start":5,"column_end":35}},{"value":"/ let (len, addr) = socket.peek_from(&mut buf).await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":32763,"byte_end":32819,"line_start":1014,"line_end":1014,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":32824,"byte_end":32857,"line_start":1015,"line_end":1015,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":32862,"byte_end":32869,"line_start":1016,"line_end":1016,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":33561,"byte_end":33568,"line_start":1039,"line_end":1039,"column_start":18,"column_end":25},"name":"send_to","qualname":"<Async<UdpSocket>>::send_to","value":"fn <A> (&self, buf: &[u8], addr: A) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the specified address.","sig":null,"attributes":[{"value":"/ Sends data to the specified address.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":33021,"byte_end":33061,"line_start":1021,"line_end":1021,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":33066,"byte_end":33069,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes writen.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":33074,"byte_end":33113,"line_start":1023,"line_end":1023,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":33118,"byte_end":33121,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":33126,"byte_end":33140,"line_start":1025,"line_end":1025,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":33145,"byte_end":33148,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":33153,"byte_end":33166,"line_start":1027,"line_end":1027,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":33171,"byte_end":33195,"line_start":1028,"line_end":1028,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":33200,"byte_end":33228,"line_start":1029,"line_end":1029,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":33233,"byte_end":33236,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":33241,"byte_end":33285,"line_start":1031,"line_end":1031,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":33290,"byte_end":33354,"line_start":1032,"line_end":1032,"column_start":5,"column_end":69}},{"value":"/ let addr = socket.get_ref().local_addr()?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":33359,"byte_end":33405,"line_start":1033,"line_end":1033,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":33410,"byte_end":33413,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":33418,"byte_end":33441,"line_start":1035,"line_end":1035,"column_start":5,"column_end":28}},{"value":"/ let len = socket.send_to(msg, addr).await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":33446,"byte_end":33493,"line_start":1036,"line_end":1036,"column_start":5,"column_end":52}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":33498,"byte_end":33531,"line_start":1037,"line_end":1037,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":33536,"byte_end":33543,"line_start":1038,"line_end":1038,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":34660,"byte_end":34664,"line_start":1068,"line_end":1068,"column_start":18,"column_end":22},"name":"recv","qualname":"<Async<UdpSocket>>::recv","value":"fn (&self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message from the connected peer.","sig":null,"attributes":[{"value":"/ Receives a single datagram message from the connected peer.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":33742,"byte_end":33805,"line_start":1044,"line_end":1044,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":33810,"byte_end":33813,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":33818,"byte_end":33855,"line_start":1046,"line_end":1046,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":33860,"byte_end":33863,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":33868,"byte_end":33962,"line_start":1048,"line_end":1048,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":33967,"byte_end":34037,"line_start":1049,"line_end":1049,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":34042,"byte_end":34045,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UdpSocket::connect()`] method connects this socket to a remote address.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":34050,"byte_end":34142,"line_start":1051,"line_end":1051,"column_start":5,"column_end":97}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":34147,"byte_end":34204,"line_start":1052,"line_end":1052,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":34209,"byte_end":34212,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":34217,"byte_end":34231,"line_start":1054,"line_end":1054,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":34236,"byte_end":34239,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":34244,"byte_end":34257,"line_start":1056,"line_end":1056,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":34262,"byte_end":34286,"line_start":1057,"line_end":1057,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":34291,"byte_end":34319,"line_start":1058,"line_end":1058,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":34324,"byte_end":34327,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":34332,"byte_end":34376,"line_start":1060,"line_end":1060,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":34381,"byte_end":34448,"line_start":1061,"line_end":1061,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":34453,"byte_end":34501,"line_start":1062,"line_end":1062,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":34506,"byte_end":34509,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":34514,"byte_end":34544,"line_start":1064,"line_end":1064,"column_start":5,"column_end":35}},{"value":"/ let len = socket.recv(&mut buf).await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":34549,"byte_end":34592,"line_start":1065,"line_end":1065,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":34597,"byte_end":34630,"line_start":1066,"line_end":1066,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":34635,"byte_end":34642,"line_start":1067,"line_end":1067,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":35769,"byte_end":35773,"line_start":1097,"line_end":1097,"column_start":18,"column_end":22},"name":"peek","qualname":"<Async<UdpSocket>>::peek","value":"fn (&self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message from the connected peer without removing it from the\n queue.","sig":null,"attributes":[{"value":"/ Receives a single datagram message from the connected peer without removing it from the","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":34770,"byte_end":34861,"line_start":1072,"line_end":1072,"column_start":5,"column_end":96}},{"value":"/ queue.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":34866,"byte_end":34876,"line_start":1073,"line_end":1073,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":34881,"byte_end":34884,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":34889,"byte_end":34964,"line_start":1075,"line_end":1075,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":34969,"byte_end":34972,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":34977,"byte_end":35071,"line_start":1077,"line_end":1077,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":35076,"byte_end":35146,"line_start":1078,"line_end":1078,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":35151,"byte_end":35154,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UdpSocket::connect()`] method connects this socket to a remote address.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":35159,"byte_end":35251,"line_start":1080,"line_end":1080,"column_start":5,"column_end":97}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":35256,"byte_end":35313,"line_start":1081,"line_end":1081,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":35318,"byte_end":35321,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":35326,"byte_end":35340,"line_start":1083,"line_end":1083,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":35345,"byte_end":35348,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":35353,"byte_end":35366,"line_start":1085,"line_end":1085,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":35371,"byte_end":35395,"line_start":1086,"line_end":1086,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":35400,"byte_end":35428,"line_start":1087,"line_end":1087,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":35433,"byte_end":35436,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":35441,"byte_end":35485,"line_start":1089,"line_end":1089,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":35490,"byte_end":35557,"line_start":1090,"line_end":1090,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":35562,"byte_end":35610,"line_start":1091,"line_end":1091,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":35615,"byte_end":35618,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":35623,"byte_end":35653,"line_start":1093,"line_end":1093,"column_start":5,"column_end":35}},{"value":"/ let len = socket.peek(&mut buf).await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":35658,"byte_end":35701,"line_start":1094,"line_end":1094,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":35706,"byte_end":35739,"line_start":1095,"line_end":1095,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":35744,"byte_end":35751,"line_start":1096,"line_end":1096,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":36580,"byte_end":36584,"line_start":1122,"line_end":1122,"column_start":18,"column_end":22},"name":"send","qualname":"<Async<UdpSocket>>::send","value":"fn (&self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the connected peer.","sig":null,"attributes":[{"value":"/ Sends data to the connected peer.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":35879,"byte_end":35916,"line_start":1101,"line_end":1101,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":35921,"byte_end":35924,"line_start":1102,"line_end":1102,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes written.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":35929,"byte_end":35969,"line_start":1103,"line_end":1103,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":35974,"byte_end":35977,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UdpSocket::connect()`] method connects this socket to a remote address.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":35982,"byte_end":36074,"line_start":1105,"line_end":1105,"column_start":5,"column_end":97}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":36079,"byte_end":36136,"line_start":1106,"line_end":1106,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":36141,"byte_end":36144,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":36149,"byte_end":36163,"line_start":1108,"line_end":1108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":36168,"byte_end":36171,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":36176,"byte_end":36189,"line_start":1110,"line_end":1110,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":36194,"byte_end":36218,"line_start":1111,"line_end":1111,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":36223,"byte_end":36251,"line_start":1112,"line_end":1112,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":36256,"byte_end":36259,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":36264,"byte_end":36308,"line_start":1114,"line_end":1114,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":36313,"byte_end":36380,"line_start":1115,"line_end":1115,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":36385,"byte_end":36433,"line_start":1116,"line_end":1116,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":36438,"byte_end":36441,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":36446,"byte_end":36469,"line_start":1118,"line_end":1118,"column_start":5,"column_end":28}},{"value":"/ let len = socket.send(msg).await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":36474,"byte_end":36512,"line_start":1119,"line_end":1119,"column_start":5,"column_end":43}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":36517,"byte_end":36550,"line_start":1120,"line_end":1120,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":36555,"byte_end":36562,"line_start":1121,"line_end":1121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":37371,"byte_end":37375,"line_start":1150,"line_end":1150,"column_start":12,"column_end":16},"name":"bind","qualname":"<Async<UnixListener>>::bind","value":"fn <P> (path: P) -> io::Result<Async<UnixListener>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDS listener bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a UDS listener bound to the specified path.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":36928,"byte_end":36983,"line_start":1137,"line_end":1137,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":36988,"byte_end":36991,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":36996,"byte_end":37010,"line_start":1139,"line_end":1139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":37015,"byte_end":37018,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":37023,"byte_end":37036,"line_start":1141,"line_end":1141,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":37041,"byte_end":37065,"line_start":1142,"line_end":1142,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixListener;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":37070,"byte_end":37111,"line_start":1143,"line_end":1143,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":37116,"byte_end":37119,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":37124,"byte_end":37168,"line_start":1145,"line_end":1145,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<UnixListener>::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":37173,"byte_end":37236,"line_start":1146,"line_end":1146,"column_start":5,"column_end":68}},{"value":"/ println!(\"Listening on {:?}\", listener.get_ref().local_addr()?);","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":37241,"byte_end":37309,"line_start":1147,"line_end":1147,"column_start":5,"column_end":73}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":37314,"byte_end":37347,"line_start":1148,"line_end":1148,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":37352,"byte_end":37359,"line_start":1149,"line_end":1149,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":38143,"byte_end":38149,"line_start":1172,"line_end":1172,"column_start":18,"column_end":24},"name":"accept","qualname":"<Async<UnixListener>>::accept","value":"fn (&self) -> io::Result<(Async<UnixStream>, UnixSocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming UDS stream connection.","sig":null,"attributes":[{"value":"/ Accepts a new incoming UDS stream connection.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":37545,"byte_end":37594,"line_start":1155,"line_end":1155,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":37599,"byte_end":37602,"line_start":1156,"line_end":1156,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, it will be returned as a stream together with its remote","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":37607,"byte_end":37701,"line_start":1157,"line_end":1157,"column_start":5,"column_end":99}},{"value":"/ address.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":37706,"byte_end":37718,"line_start":1158,"line_end":1158,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":37723,"byte_end":37726,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":37731,"byte_end":37745,"line_start":1160,"line_end":1160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":37750,"byte_end":37753,"line_start":1161,"line_end":1161,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":37758,"byte_end":37771,"line_start":1162,"line_end":1162,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":37776,"byte_end":37800,"line_start":1163,"line_end":1163,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixListener;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":37805,"byte_end":37846,"line_start":1164,"line_end":1164,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":37851,"byte_end":37854,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":37859,"byte_end":37903,"line_start":1166,"line_end":1166,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<UnixListener>::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":37908,"byte_end":37971,"line_start":1167,"line_end":1167,"column_start":5,"column_end":68}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":37976,"byte_end":38026,"line_start":1168,"line_end":1168,"column_start":5,"column_end":55}},{"value":"/ println!(\"Accepted client: {:?}\", addr);","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":38031,"byte_end":38075,"line_start":1169,"line_end":1169,"column_start":5,"column_end":49}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":38080,"byte_end":38113,"line_start":1170,"line_end":1170,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":38118,"byte_end":38125,"line_start":1171,"line_end":1171,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":39084,"byte_end":39092,"line_start":1199,"line_end":1199,"column_start":12,"column_end":20},"name":"incoming","qualname":"<Async<UnixListener>>::incoming","value":"fn (&self) -> impl Stream<Item = io::Result<Async<UnixStream>>> + Send + '_","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming UDS connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming UDS connections.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":38331,"byte_end":38380,"line_start":1177,"line_end":1177,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":38385,"byte_end":38388,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ The stream is infinite, i.e. it never stops with a [`None`] item.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":38393,"byte_end":38462,"line_start":1179,"line_end":1179,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":38467,"byte_end":38470,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":38475,"byte_end":38489,"line_start":1181,"line_end":1181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":38494,"byte_end":38497,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":38502,"byte_end":38515,"line_start":1183,"line_end":1183,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":38520,"byte_end":38544,"line_start":1184,"line_end":1184,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::{pin, stream::StreamExt};","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":38549,"byte_end":38596,"line_start":1185,"line_end":1185,"column_start":5,"column_end":52}},{"value":"/ use std::os::unix::net::UnixListener;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":38601,"byte_end":38642,"line_start":1186,"line_end":1186,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":38647,"byte_end":38650,"line_start":1187,"line_end":1187,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":38655,"byte_end":38699,"line_start":1188,"line_end":1188,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<UnixListener>::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":38704,"byte_end":38767,"line_start":1189,"line_end":1189,"column_start":5,"column_end":68}},{"value":"/ let incoming = listener.incoming();","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":38772,"byte_end":38811,"line_start":1190,"line_end":1190,"column_start":5,"column_end":44}},{"value":"/ pin!(incoming);","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":38816,"byte_end":38835,"line_start":1191,"line_end":1191,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":38840,"byte_end":38843,"line_start":1192,"line_end":1192,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":38848,"byte_end":38900,"line_start":1193,"line_end":1193,"column_start":5,"column_end":57}},{"value":"/     let stream = stream?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":38905,"byte_end":38934,"line_start":1194,"line_end":1194,"column_start":5,"column_end":34}},{"value":"/     println!(\"Accepted client: {:?}\", stream.get_ref().peer_addr()?);","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":38939,"byte_end":39012,"line_start":1195,"line_end":1195,"column_start":5,"column_end":78}},{"value":"/ }","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":39017,"byte_end":39022,"line_start":1196,"line_end":1196,"column_start":5,"column_end":10}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":39027,"byte_end":39060,"line_start":1197,"line_end":1197,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":39065,"byte_end":39072,"line_start":1198,"line_end":1198,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":40025,"byte_end":40032,"line_start":1230,"line_end":1230,"column_start":18,"column_end":25},"name":"connect","qualname":"<Async<UnixStream>>::connect","value":"fn <P> (path: P) -> io::Result<Async<UnixStream>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDS stream connected to the specified path.","sig":null,"attributes":[{"value":"/ Creates a UDS stream connected to the specified path.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":39644,"byte_end":39701,"line_start":1218,"line_end":1218,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":39706,"byte_end":39709,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":39714,"byte_end":39728,"line_start":1220,"line_end":1220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":39733,"byte_end":39736,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":39741,"byte_end":39754,"line_start":1222,"line_end":1222,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":39759,"byte_end":39783,"line_start":1223,"line_end":1223,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixStream;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":39788,"byte_end":39827,"line_start":1224,"line_end":1224,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":39832,"byte_end":39835,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":39840,"byte_end":39884,"line_start":1226,"line_end":1226,"column_start":5,"column_end":49}},{"value":"/ let stream = Async::<UnixStream>::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":39889,"byte_end":39957,"line_start":1227,"line_end":1227,"column_start":5,"column_end":73}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":39962,"byte_end":39995,"line_start":1228,"line_end":1228,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":40000,"byte_end":40007,"line_start":1229,"line_end":1229,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":40892,"byte_end":40896,"line_start":1255,"line_end":1255,"column_start":12,"column_end":16},"name":"pair","qualname":"<Async<UnixStream>>::pair","value":"fn () -> io::Result<(Async<UnixStream>, Async<UnixStream>)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected UDS stream sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected UDS stream sockets.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":40524,"byte_end":40584,"line_start":1243,"line_end":1243,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":40589,"byte_end":40592,"line_start":1244,"line_end":1244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":40597,"byte_end":40611,"line_start":1245,"line_end":1245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":40616,"byte_end":40619,"line_start":1246,"line_end":1246,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":40624,"byte_end":40637,"line_start":1247,"line_end":1247,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":40642,"byte_end":40666,"line_start":1248,"line_end":1248,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixStream;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":40671,"byte_end":40710,"line_start":1249,"line_end":1249,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":40715,"byte_end":40718,"line_start":1250,"line_end":1250,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":40723,"byte_end":40767,"line_start":1251,"line_end":1251,"column_start":5,"column_end":49}},{"value":"/ let (stream1, stream2) = Async::<UnixStream>::pair()?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":40772,"byte_end":40830,"line_start":1252,"line_end":1252,"column_start":5,"column_end":63}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":40835,"byte_end":40868,"line_start":1253,"line_end":1253,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":40873,"byte_end":40880,"line_start":1254,"line_end":1254,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":41739,"byte_end":41743,"line_start":1284,"line_end":1284,"column_start":12,"column_end":16},"name":"bind","qualname":"<Async<UnixDatagram>>::bind","value":"fn <P> (path: P) -> io::Result<Async<UnixDatagram>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDS datagram socket bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a UDS datagram socket bound to the specified path.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":41364,"byte_end":41426,"line_start":1272,"line_end":1272,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":41431,"byte_end":41434,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":41439,"byte_end":41453,"line_start":1274,"line_end":1274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":41458,"byte_end":41461,"line_start":1275,"line_end":1275,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":41466,"byte_end":41479,"line_start":1276,"line_end":1276,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":41484,"byte_end":41508,"line_start":1277,"line_end":1277,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":41513,"byte_end":41554,"line_start":1278,"line_end":1278,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":41559,"byte_end":41562,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":41567,"byte_end":41611,"line_start":1280,"line_end":1280,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":41616,"byte_end":41677,"line_start":1281,"line_end":1281,"column_start":5,"column_end":66}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":41682,"byte_end":41715,"line_start":1282,"line_end":1282,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":41720,"byte_end":41727,"line_start":1283,"line_end":1283,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42275,"byte_end":42282,"line_start":1301,"line_end":1301,"column_start":12,"column_end":19},"name":"unbound","qualname":"<Async<UnixDatagram>>::unbound","value":"fn () -> io::Result<Async<UnixDatagram>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDS datagram socket not bound to any address.","sig":null,"attributes":[{"value":"/ Creates a UDS datagram socket not bound to any address.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":41913,"byte_end":41972,"line_start":1289,"line_end":1289,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":41977,"byte_end":41980,"line_start":1290,"line_end":1290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":41985,"byte_end":41999,"line_start":1291,"line_end":1291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42004,"byte_end":42007,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42012,"byte_end":42025,"line_start":1293,"line_end":1293,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42030,"byte_end":42054,"line_start":1294,"line_end":1294,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42059,"byte_end":42100,"line_start":1295,"line_end":1295,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42105,"byte_end":42108,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42113,"byte_end":42157,"line_start":1297,"line_end":1297,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::unbound()?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42162,"byte_end":42213,"line_start":1298,"line_end":1298,"column_start":5,"column_end":56}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42218,"byte_end":42251,"line_start":1299,"line_end":1299,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42256,"byte_end":42263,"line_start":1300,"line_end":1300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42758,"byte_end":42762,"line_start":1317,"line_end":1317,"column_start":12,"column_end":16},"name":"pair","qualname":"<Async<UnixDatagram>>::pair","value":"fn () -> io::Result<(Async<UnixDatagram>, Async<UnixDatagram>)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected Unix datagram sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected Unix datagram sockets.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42383,"byte_end":42446,"line_start":1305,"line_end":1305,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42451,"byte_end":42454,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42459,"byte_end":42473,"line_start":1307,"line_end":1307,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42478,"byte_end":42481,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42486,"byte_end":42499,"line_start":1309,"line_end":1309,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42504,"byte_end":42528,"line_start":1310,"line_end":1310,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42533,"byte_end":42574,"line_start":1311,"line_end":1311,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42579,"byte_end":42582,"line_start":1312,"line_end":1312,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42587,"byte_end":42631,"line_start":1313,"line_end":1313,"column_start":5,"column_end":49}},{"value":"/ let (socket1, socket2) = Async::<UnixDatagram>::pair()?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42636,"byte_end":42696,"line_start":1314,"line_end":1314,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42701,"byte_end":42734,"line_start":1315,"line_end":1315,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42739,"byte_end":42746,"line_start":1316,"line_end":1316,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43494,"byte_end":43503,"line_start":1339,"line_end":1339,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<Async<UnixDatagram>>::recv_from","value":"fn (&self, buf: &mut [u8]) -> io::Result<(usize, UnixSocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42949,"byte_end":42983,"line_start":1322,"line_end":1322,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42988,"byte_end":42991,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":42996,"byte_end":43071,"line_start":1324,"line_end":1324,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43076,"byte_end":43079,"line_start":1325,"line_end":1325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43084,"byte_end":43098,"line_start":1326,"line_end":1326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43103,"byte_end":43106,"line_start":1327,"line_end":1327,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43111,"byte_end":43124,"line_start":1328,"line_end":1328,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43129,"byte_end":43153,"line_start":1329,"line_end":1329,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43158,"byte_end":43199,"line_start":1330,"line_end":1330,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43204,"byte_end":43207,"line_start":1331,"line_end":1331,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43212,"byte_end":43256,"line_start":1332,"line_end":1332,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43261,"byte_end":43322,"line_start":1333,"line_end":1333,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43327,"byte_end":43330,"line_start":1334,"line_end":1334,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43335,"byte_end":43365,"line_start":1335,"line_end":1335,"column_start":5,"column_end":35}},{"value":"/ let (len, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43370,"byte_end":43426,"line_start":1336,"line_end":1336,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43431,"byte_end":43464,"line_start":1337,"line_end":1337,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43469,"byte_end":43476,"line_start":1338,"line_end":1338,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":44156,"byte_end":44163,"line_start":1361,"line_end":1361,"column_start":18,"column_end":25},"name":"send_to","qualname":"<Async<UnixDatagram>>::send_to","value":"fn <P> (&self, buf: &[u8], path: P) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the specified address.","sig":null,"attributes":[{"value":"/ Sends data to the specified address.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43632,"byte_end":43672,"line_start":1343,"line_end":1343,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43677,"byte_end":43680,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes written.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43685,"byte_end":43725,"line_start":1345,"line_end":1345,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43730,"byte_end":43733,"line_start":1346,"line_end":1346,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43738,"byte_end":43752,"line_start":1347,"line_end":1347,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43757,"byte_end":43760,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43765,"byte_end":43778,"line_start":1349,"line_end":1349,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43783,"byte_end":43807,"line_start":1350,"line_end":1350,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43812,"byte_end":43853,"line_start":1351,"line_end":1351,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43858,"byte_end":43861,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43866,"byte_end":43910,"line_start":1353,"line_end":1353,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::unbound()?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43915,"byte_end":43966,"line_start":1354,"line_end":1354,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43971,"byte_end":43974,"line_start":1355,"line_end":1355,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":43979,"byte_end":44002,"line_start":1356,"line_end":1356,"column_start":5,"column_end":28}},{"value":"/ let addr = \"/tmp/socket\";","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":44007,"byte_end":44036,"line_start":1357,"line_end":1357,"column_start":5,"column_end":34}},{"value":"/ let len = socket.send_to(msg, addr).await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":44041,"byte_end":44088,"line_start":1358,"line_end":1358,"column_start":5,"column_end":52}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":44093,"byte_end":44126,"line_start":1359,"line_end":1359,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":44131,"byte_end":44138,"line_start":1360,"line_end":1360,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":45063,"byte_end":45067,"line_start":1386,"line_end":1386,"column_start":18,"column_end":22},"name":"recv","qualname":"<Async<UnixDatagram>>::recv","value":"fn (&self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the connected peer.","sig":null,"attributes":[{"value":"/ Receives data from the connected peer.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":44301,"byte_end":44343,"line_start":1365,"line_end":1365,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":44348,"byte_end":44351,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":44356,"byte_end":44431,"line_start":1367,"line_end":1367,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":44436,"byte_end":44439,"line_start":1368,"line_end":1368,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UnixDatagram::connect()`] method connects this socket to a remote address.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":44444,"byte_end":44539,"line_start":1369,"line_end":1369,"column_start":5,"column_end":100}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":44544,"byte_end":44601,"line_start":1370,"line_end":1370,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":44606,"byte_end":44609,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":44614,"byte_end":44628,"line_start":1372,"line_end":1372,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":44633,"byte_end":44636,"line_start":1373,"line_end":1373,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":44641,"byte_end":44654,"line_start":1374,"line_end":1374,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":44659,"byte_end":44683,"line_start":1375,"line_end":1375,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":44688,"byte_end":44729,"line_start":1376,"line_end":1376,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":44734,"byte_end":44737,"line_start":1377,"line_end":1377,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":44742,"byte_end":44786,"line_start":1378,"line_end":1378,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::bind(\"/tmp/socket1\")?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":44791,"byte_end":44853,"line_start":1379,"line_end":1379,"column_start":5,"column_end":67}},{"value":"/ socket.get_ref().connect(\"/tmp/socket2\")?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":44858,"byte_end":44904,"line_start":1380,"line_end":1380,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":44909,"byte_end":44912,"line_start":1381,"line_end":1381,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":44917,"byte_end":44947,"line_start":1382,"line_end":1382,"column_start":5,"column_end":35}},{"value":"/ let len = socket.recv(&mut buf).await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":44952,"byte_end":44995,"line_start":1383,"line_end":1383,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":45000,"byte_end":45033,"line_start":1384,"line_end":1384,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":45038,"byte_end":45045,"line_start":1385,"line_end":1385,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":45883,"byte_end":45887,"line_start":1411,"line_end":1411,"column_start":18,"column_end":22},"name":"send","qualname":"<Async<UnixDatagram>>::send","value":"fn (&self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the connected peer.","sig":null,"attributes":[{"value":"/ Sends data to the connected peer.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":45173,"byte_end":45210,"line_start":1390,"line_end":1390,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":45215,"byte_end":45218,"line_start":1391,"line_end":1391,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes written.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":45223,"byte_end":45263,"line_start":1392,"line_end":1392,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":45268,"byte_end":45271,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UnixDatagram::connect()`] method connects this socket to a remote address.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":45276,"byte_end":45371,"line_start":1394,"line_end":1394,"column_start":5,"column_end":100}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":45376,"byte_end":45433,"line_start":1395,"line_end":1395,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":45438,"byte_end":45441,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":45446,"byte_end":45460,"line_start":1397,"line_end":1397,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":45465,"byte_end":45468,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":45473,"byte_end":45486,"line_start":1399,"line_end":1399,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":45491,"byte_end":45515,"line_start":1400,"line_end":1400,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":45520,"byte_end":45561,"line_start":1401,"line_end":1401,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":45566,"byte_end":45569,"line_start":1402,"line_end":1402,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":45574,"byte_end":45618,"line_start":1403,"line_end":1403,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::bind(\"/tmp/socket1\")?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":45623,"byte_end":45685,"line_start":1404,"line_end":1404,"column_start":5,"column_end":67}},{"value":"/ socket.get_ref().connect(\"/tmp/socket2\")?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":45690,"byte_end":45736,"line_start":1405,"line_end":1405,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":45741,"byte_end":45744,"line_start":1406,"line_end":1406,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":45749,"byte_end":45772,"line_start":1407,"line_end":1407,"column_start":5,"column_end":28}},{"value":"/ let len = socket.send(msg).await?;","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":45777,"byte_end":45815,"line_start":1408,"line_end":1408,"column_start":5,"column_end":43}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":45820,"byte_end":45853,"line_start":1409,"line_end":1409,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":45858,"byte_end":45865,"line_start":1410,"line_end":1410,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":366},"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":47074,"byte_end":47088,"line_start":1457,"line_end":1457,"column_start":8,"column_end":22},"name":"shutdown_write","qualname":"::shutdown_write","value":"fn (#[cfg(unix)] raw: RawFd) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the write side of a socket.","sig":null,"attributes":[{"value":"/ Shuts down the write side of a socket.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":46941,"byte_end":46983,"line_start":1454,"line_end":1454,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":46984,"byte_end":46987,"line_start":1455,"line_end":1455,"column_start":1,"column_end":4}},{"value":"/ If this source is not a socket, the `shutdown()` syscall error is ignored.","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":46988,"byte_end":47066,"line_start":1456,"line_end":1456,"column_start":1,"column_end":79}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/reactor.rs","byte_start":50043,"byte_end":50050,"line_start":68,"line_end":68,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/reactor.rs","byte_start":63244,"byte_end":63255,"line_start":419,"line_end":419,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/reactor.rs","byte_start":68339,"byte_end":68345,"line_start":568,"line_end":568,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/reactor.rs","byte_start":73958,"byte_end":73968,"line_start":715,"line_end":715,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":4510,"byte_end":4515,"line_start":148,"line_end":148,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":7315,"byte_end":7320,"line_start":243,"line_end":243,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":7551,"byte_end":7556,"line_start":252,"line_end":252,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10841,"byte_end":10846,"line_start":342,"line_end":342,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10884,"byte_end":10889,"line_start":345,"line_end":345,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":12009,"byte_end":12014,"line_start":379,"line_end":379,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":13360,"byte_end":13365,"line_start":426,"line_end":426,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":198},{"krate":0,"index":203},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":22900,"byte_end":22905,"line_start":701,"line_end":701,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":23230,"byte_end":23235,"line_start":713,"line_end":713,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":24240,"byte_end":24245,"line_start":752,"line_end":752,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":25829,"byte_end":25834,"line_start":807,"line_end":807,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":28355,"byte_end":28360,"line_start":880,"line_end":880,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":28529,"byte_end":28534,"line_start":888,"line_end":888,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30414,"byte_end":30419,"line_start":944,"line_end":944,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30580,"byte_end":30585,"line_start":952,"line_end":952,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":282},{"krate":0,"index":286},{"krate":0,"index":291},{"krate":0,"index":295},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":36723,"byte_end":36728,"line_start":1127,"line_end":1127,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":36902,"byte_end":36907,"line_start":1136,"line_end":1136,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":39411,"byte_end":39416,"line_start":1208,"line_end":1208,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":39620,"byte_end":39625,"line_start":1217,"line_end":1217,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":41137,"byte_end":41142,"line_start":1262,"line_end":1262,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":41338,"byte_end":41343,"line_start":1271,"line_end":1271,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":339},{"krate":0,"index":344},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":46052,"byte_end":46057,"line_start":1417,"line_end":1417,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/reactor.rs","byte_start":50043,"byte_end":50050,"line_start":68,"line_end":68,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":82},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/reactor.rs","byte_start":63244,"byte_end":63255,"line_start":419,"line_end":419,"column_start":6,"column_end":17},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/reactor.rs","byte_start":68339,"byte_end":68345,"line_start":568,"line_end":568,"column_start":6,"column_end":12},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/reactor.rs","byte_start":73958,"byte_end":73968,"line_start":715,"line_end":715,"column_start":24,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":154},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":4510,"byte_end":4515,"line_start":148,"line_end":148,"column_start":6,"column_end":11},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":7315,"byte_end":7320,"line_start":243,"line_end":243,"column_start":15,"column_end":20},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":385},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":7551,"byte_end":7556,"line_start":252,"line_end":252,"column_start":17,"column_end":22},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":385},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10841,"byte_end":10846,"line_start":342,"line_end":342,"column_start":19,"column_end":24},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":1891}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":10884,"byte_end":10889,"line_start":345,"line_end":345,"column_start":18,"column_end":23},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":12009,"byte_end":12014,"line_start":379,"line_end":379,"column_start":30,"column_end":35},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":390},"to":{"krate":1,"index":8193}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":13360,"byte_end":13365,"line_start":426,"line_end":426,"column_start":9,"column_end":14},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":22900,"byte_end":22905,"line_start":701,"line_end":701,"column_start":18,"column_end":23},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":23230,"byte_end":23235,"line_start":713,"line_end":713,"column_start":29,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":390},"to":{"krate":20,"index":17}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":24240,"byte_end":24245,"line_start":752,"line_end":752,"column_start":31,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":390},"to":{"krate":20,"index":20}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":25829,"byte_end":25834,"line_start":807,"line_end":807,"column_start":6,"column_end":11},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":28355,"byte_end":28360,"line_start":880,"line_end":880,"column_start":41,"column_end":46},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":1783}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":28529,"byte_end":28534,"line_start":888,"line_end":888,"column_start":6,"column_end":11},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30414,"byte_end":30419,"line_start":944,"line_end":944,"column_start":39,"column_end":44},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":1783}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":30580,"byte_end":30585,"line_start":952,"line_end":952,"column_start":6,"column_end":11},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":36723,"byte_end":36728,"line_start":1127,"line_end":1127,"column_start":39,"column_end":44},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":1783}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":36902,"byte_end":36907,"line_start":1136,"line_end":1136,"column_start":6,"column_end":11},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":39411,"byte_end":39416,"line_start":1208,"line_end":1208,"column_start":52,"column_end":57},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":1783}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":39620,"byte_end":39625,"line_start":1217,"line_end":1217,"column_start":6,"column_end":11},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":41137,"byte_end":41142,"line_start":1262,"line_end":1262,"column_start":50,"column_end":55},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":1783}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":41338,"byte_end":41343,"line_start":1271,"line_end":1271,"column_start":6,"column_end":11},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zakaria/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.1.2/src/lib.rs","byte_start":46052,"byte_end":46057,"line_start":1417,"line_end":1417,"column_start":52,"column_end":57},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":1783}}]}